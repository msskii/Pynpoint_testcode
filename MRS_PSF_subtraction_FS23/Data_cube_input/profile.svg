<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="554" onload="init(evt)" viewBox="0 0 1200 554" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="554" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg --pid 69528</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="543.00"> </text><svg id="frames" x="10" width="1180" total_samples="71714"><g><title>shift (scipy/ndimage/_interpolation.py:678) (120 samples, 0.17%)</title><rect x="0.0321%" y="148" width="0.1673%" height="15" fill="rgb(227,0,7)" fg:x="23" fg:w="120"/><text x="0.2821%" y="158.50"></text></g><g><title>spline_filter (scipy/ndimage/_interpolation.py:191) (113 samples, 0.16%)</title><rect x="0.0418%" y="164" width="0.1576%" height="15" fill="rgb(217,0,24)" fg:x="30" fg:w="113"/><text x="0.2918%" y="174.50"></text></g><g><title>spline_filter1d (scipy/ndimage/_interpolation.py:132) (101 samples, 0.14%)</title><rect x="0.0586%" y="180" width="0.1408%" height="15" fill="rgb(221,193,54)" fg:x="42" fg:w="101"/><text x="0.3086%" y="190.50"></text></g><g><title>add_fake_planets (applefy/utils/fake_planets.py:318) (986 samples, 1.37%)</title><rect x="0.0056%" y="132" width="1.3749%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="986"/><text x="0.2556%" y="142.50"></text></g><g><title>shift (scipy/ndimage/_interpolation.py:689) (834 samples, 1.16%)</title><rect x="0.2175%" y="148" width="1.1630%" height="15" fill="rgb(208,68,35)" fg:x="156" fg:w="834"/><text x="0.4675%" y="158.50"></text></g><g><title>_run_fake_planet_experiment (applefy/detections/contrast_JWST.py:380) (992 samples, 1.38%)</title><rect x="0.0014%" y="116" width="1.3833%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="992"/><text x="0.2514%" y="126.50"></text></g><g><title>run (pynpoint/readwrite/JWSTreader.py:436) (207 samples, 0.29%)</title><rect x="1.5157%" y="196" width="0.2886%" height="15" fill="rgb(207,160,47)" fg:x="1087" fg:w="207"/><text x="1.7657%" y="206.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (207 samples, 0.29%)</title><rect x="1.5157%" y="212" width="0.2886%" height="15" fill="rgb(228,23,34)" fg:x="1087" fg:w="207"/><text x="1.7657%" y="222.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (144 samples, 0.20%)</title><rect x="2.4165%" y="308" width="0.2008%" height="15" fill="rgb(218,30,26)" fg:x="1733" fg:w="144"/><text x="2.6665%" y="318.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1027) (343 samples, 0.48%)</title><rect x="2.2548%" y="292" width="0.4783%" height="15" fill="rgb(220,122,19)" fg:x="1617" fg:w="343"/><text x="2.5048%" y="302.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (141 samples, 0.20%)</title><rect x="2.9269%" y="308" width="0.1966%" height="15" fill="rgb(250,228,42)" fg:x="2099" fg:w="141"/><text x="3.1769%" y="318.50"></text></g><g><title>__setitem__ (h5py/_hl/dataset.py:947) (94 samples, 0.13%)</title><rect x="3.2128%" y="308" width="0.1311%" height="15" fill="rgb(240,193,28)" fg:x="2304" fg:w="94"/><text x="3.4628%" y="318.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1028) (526 samples, 0.73%)</title><rect x="2.7331%" y="292" width="0.7335%" height="15" fill="rgb(216,20,37)" fg:x="1960" fg:w="526"/><text x="2.9831%" y="302.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:954) (121 samples, 0.17%)</title><rect x="3.4665%" y="292" width="0.1687%" height="15" fill="rgb(206,188,39)" fg:x="2486" fg:w="121"/><text x="3.7165%" y="302.50"></text></g><g><title>__contains__ (h5py/_hl/group.py:483) (116 samples, 0.16%)</title><rect x="3.4735%" y="308" width="0.1618%" height="15" fill="rgb(217,207,13)" fg:x="2491" fg:w="116"/><text x="3.7235%" y="318.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (140 samples, 0.20%)</title><rect x="3.8110%" y="308" width="0.1952%" height="15" fill="rgb(231,73,38)" fg:x="2733" fg:w="140"/><text x="4.0610%" y="318.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:961) (295 samples, 0.41%)</title><rect x="3.6353%" y="292" width="0.4114%" height="15" fill="rgb(225,20,46)" fg:x="2607" fg:w="295"/><text x="3.8853%" y="302.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,389 samples, 1.94%)</title><rect x="2.1502%" y="276" width="1.9369%" height="15" fill="rgb(210,31,41)" fg:x="1542" fg:w="1389"/><text x="2.4002%" y="286.50">w..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,510 samples, 2.11%)</title><rect x="1.9885%" y="244" width="2.1056%" height="15" fill="rgb(221,200,47)" fg:x="1426" fg:w="1510"/><text x="2.2385%" y="254.50">w..</text></g><g><title>append_attribute_data (pynpoint/core/dataio.py:1283) (1,456 samples, 2.03%)</title><rect x="2.0638%" y="260" width="2.0303%" height="15" fill="rgb(226,26,5)" fg:x="1480" fg:w="1456"/><text x="2.3138%" y="270.50">a..</text></g><g><title>set_extra_attr_JWST (pynpoint/util/attributes.py:329) (1,621 samples, 2.26%)</title><rect x="1.8406%" y="228" width="2.2604%" height="15" fill="rgb(249,33,26)" fg:x="1320" fg:w="1621"/><text x="2.0906%" y="238.50">s..</text></g><g><title>run (pynpoint/readwrite/JWSTreader.py:469) (1,627 samples, 2.27%)</title><rect x="1.8365%" y="196" width="2.2687%" height="15" fill="rgb(235,183,28)" fg:x="1317" fg:w="1627"/><text x="2.0865%" y="206.50">r..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,624 samples, 2.26%)</title><rect x="1.8406%" y="212" width="2.2646%" height="15" fill="rgb(221,5,38)" fg:x="1320" fg:w="1624"/><text x="2.0906%" y="222.50">w..</text></g><g><title>run_module (pynpoint/core/pypeline.py:580) (1,927 samples, 2.69%)</title><rect x="1.4251%" y="164" width="2.6871%" height="15" fill="rgb(247,18,42)" fg:x="1022" fg:w="1927"/><text x="1.6751%" y="174.50">ru..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,927 samples, 2.69%)</title><rect x="1.4251%" y="180" width="2.6871%" height="15" fill="rgb(241,131,45)" fg:x="1022" fg:w="1927"/><text x="1.6751%" y="190.50">wr..</text></g><g><title>__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:163) (1,929 samples, 2.69%)</title><rect x="1.4237%" y="132" width="2.6899%" height="15" fill="rgb(249,31,29)" fg:x="1021" fg:w="1929"/><text x="1.6737%" y="142.50">__..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,928 samples, 2.69%)</title><rect x="1.4251%" y="148" width="2.6885%" height="15" fill="rgb(225,111,53)" fg:x="1022" fg:w="1928"/><text x="1.6751%" y="158.50">wr..</text></g><g><title>run (pynpoint/readwrite/JWSTreader.py:436) (206 samples, 0.29%)</title><rect x="4.2432%" y="196" width="0.2873%" height="15" fill="rgb(238,160,17)" fg:x="3043" fg:w="206"/><text x="4.4932%" y="206.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (206 samples, 0.29%)</title><rect x="4.2432%" y="212" width="0.2873%" height="15" fill="rgb(214,148,48)" fg:x="3043" fg:w="206"/><text x="4.4932%" y="222.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1007) (74 samples, 0.10%)</title><rect x="4.8958%" y="292" width="0.1032%" height="15" fill="rgb(232,36,49)" fg:x="3511" fg:w="74"/><text x="5.1458%" y="302.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (145 samples, 0.20%)</title><rect x="5.1315%" y="308" width="0.2022%" height="15" fill="rgb(209,103,24)" fg:x="3680" fg:w="145"/><text x="5.3815%" y="318.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1027) (326 samples, 0.45%)</title><rect x="5.0018%" y="292" width="0.4546%" height="15" fill="rgb(229,88,8)" fg:x="3587" fg:w="326"/><text x="5.2518%" y="302.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (132 samples, 0.18%)</title><rect x="5.6488%" y="308" width="0.1841%" height="15" fill="rgb(213,181,19)" fg:x="4051" fg:w="132"/><text x="5.8988%" y="318.50"></text></g><g><title>__setitem__ (h5py/_hl/dataset.py:947) (122 samples, 0.17%)</title><rect x="5.9249%" y="308" width="0.1701%" height="15" fill="rgb(254,191,54)" fg:x="4249" fg:w="122"/><text x="6.1749%" y="318.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1028) (552 samples, 0.77%)</title><rect x="5.4564%" y="292" width="0.7697%" height="15" fill="rgb(241,83,37)" fg:x="3913" fg:w="552"/><text x="5.7064%" y="302.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:954) (109 samples, 0.15%)</title><rect x="6.2261%" y="292" width="0.1520%" height="15" fill="rgb(233,36,39)" fg:x="4465" fg:w="109"/><text x="6.4761%" y="302.50"></text></g><g><title>__contains__ (h5py/_hl/group.py:483) (106 samples, 0.15%)</title><rect x="6.2303%" y="308" width="0.1478%" height="15" fill="rgb(226,3,54)" fg:x="4468" fg:w="106"/><text x="6.4803%" y="318.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (132 samples, 0.18%)</title><rect x="6.5343%" y="308" width="0.1841%" height="15" fill="rgb(245,192,40)" fg:x="4686" fg:w="132"/><text x="6.7843%" y="318.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:961) (282 samples, 0.39%)</title><rect x="6.3781%" y="292" width="0.3932%" height="15" fill="rgb(238,167,29)" fg:x="4574" fg:w="282"/><text x="6.6281%" y="302.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,378 samples, 1.92%)</title><rect x="4.8930%" y="276" width="1.9215%" height="15" fill="rgb(232,182,51)" fg:x="3509" fg:w="1378"/><text x="5.1430%" y="286.50">w..</text></g><g><title>append_attribute_data (pynpoint/core/dataio.py:1283) (1,475 samples, 2.06%)</title><rect x="4.7801%" y="260" width="2.0568%" height="15" fill="rgb(231,60,39)" fg:x="3428" fg:w="1475"/><text x="5.0301%" y="270.50">a..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,525 samples, 2.13%)</title><rect x="4.7146%" y="244" width="2.1265%" height="15" fill="rgb(208,69,12)" fg:x="3381" fg:w="1525"/><text x="4.9646%" y="254.50">w..</text></g><g><title>set_extra_attr_JWST (pynpoint/util/attributes.py:329) (1,626 samples, 2.27%)</title><rect x="4.5779%" y="228" width="2.2673%" height="15" fill="rgb(235,93,37)" fg:x="3283" fg:w="1626"/><text x="4.8279%" y="238.50">s..</text></g><g><title>run (pynpoint/readwrite/JWSTreader.py:469) (1,631 samples, 2.27%)</title><rect x="4.5779%" y="196" width="2.2743%" height="15" fill="rgb(213,116,39)" fg:x="3283" fg:w="1631"/><text x="4.8279%" y="206.50">r..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,631 samples, 2.27%)</title><rect x="4.5779%" y="212" width="2.2743%" height="15" fill="rgb(222,207,29)" fg:x="3283" fg:w="1631"/><text x="4.8279%" y="222.50">w..</text></g><g><title>run_module (pynpoint/core/pypeline.py:580) (1,933 samples, 2.70%)</title><rect x="4.1638%" y="164" width="2.6954%" height="15" fill="rgb(206,96,30)" fg:x="2986" fg:w="1933"/><text x="4.4138%" y="174.50">ru..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,933 samples, 2.70%)</title><rect x="4.1638%" y="180" width="2.6954%" height="15" fill="rgb(218,138,4)" fg:x="2986" fg:w="1933"/><text x="4.4138%" y="190.50">wr..</text></g><g><title>__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:185) (1,935 samples, 2.70%)</title><rect x="4.1624%" y="132" width="2.6982%" height="15" fill="rgb(250,191,14)" fg:x="2985" fg:w="1935"/><text x="4.4124%" y="142.50">__..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,935 samples, 2.70%)</title><rect x="4.1624%" y="148" width="2.6982%" height="15" fill="rgb(239,60,40)" fg:x="2985" fg:w="1935"/><text x="4.4124%" y="158.50">wr..</text></g><g><title>run_module (pynpoint/core/pypeline.py:580) (124 samples, 0.17%)</title><rect x="6.8648%" y="164" width="0.1729%" height="15" fill="rgb(206,27,48)" fg:x="4923" fg:w="124"/><text x="7.1148%" y="174.50"></text></g><g><title>__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:198) (128 samples, 0.18%)</title><rect x="6.8634%" y="132" width="0.1785%" height="15" fill="rgb(225,35,8)" fg:x="4922" fg:w="128"/><text x="7.1134%" y="142.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (128 samples, 0.18%)</title><rect x="6.8634%" y="148" width="0.1785%" height="15" fill="rgb(250,213,24)" fg:x="4922" fg:w="128"/><text x="7.1134%" y="158.50"></text></g><g><title>minimize (scipy/optimize/_minimize.py:639) (92 samples, 0.13%)</title><rect x="7.1283%" y="164" width="0.1283%" height="15" fill="rgb(247,123,22)" fg:x="5112" fg:w="92"/><text x="7.3783%" y="174.50"></text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:137) (116 samples, 0.16%)</title><rect x="7.3863%" y="260" width="0.1618%" height="15" fill="rgb(231,138,38)" fg:x="5297" fg:w="116"/><text x="7.6363%" y="270.50"></text></g><g><title>guesses (center_guess.py:149) (109 samples, 0.15%)</title><rect x="7.3960%" y="276" width="0.1520%" height="15" fill="rgb(231,145,46)" fg:x="5304" fg:w="109"/><text x="7.6460%" y="286.50"></text></g><g><title>_update_fun (scipy/optimize/_differentiable_functions.py:251) (117 samples, 0.16%)</title><rect x="7.3863%" y="228" width="0.1631%" height="15" fill="rgb(251,118,11)" fg:x="5297" fg:w="117"/><text x="7.6363%" y="238.50"></text></g><g><title>update_fun (scipy/optimize/_differentiable_functions.py:155) (117 samples, 0.16%)</title><rect x="7.3863%" y="244" width="0.1631%" height="15" fill="rgb(217,147,25)" fg:x="5297" fg:w="117"/><text x="7.6363%" y="254.50"></text></g><g><title>__init__ (scipy/optimize/_differentiable_functions.py:158) (118 samples, 0.16%)</title><rect x="7.3863%" y="212" width="0.1645%" height="15" fill="rgb(247,81,37)" fg:x="5297" fg:w="118"/><text x="7.6363%" y="222.50"></text></g><g><title>gaussian_2d (center_guess.py:142) (85 samples, 0.12%)</title><rect x="7.9190%" y="340" width="0.1185%" height="15" fill="rgb(209,12,38)" fg:x="5679" fg:w="85"/><text x="8.1690%" y="350.50"></text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:137) (183 samples, 0.26%)</title><rect x="7.7907%" y="308" width="0.2552%" height="15" fill="rgb(227,1,9)" fg:x="5587" fg:w="183"/><text x="8.0407%" y="318.50"></text></g><g><title>guesses (center_guess.py:149) (166 samples, 0.23%)</title><rect x="7.8144%" y="324" width="0.2315%" height="15" fill="rgb(248,47,43)" fg:x="5604" fg:w="166"/><text x="8.0644%" y="334.50"></text></g><g><title>fun_wrapped (scipy/optimize/_numdiff.py:456) (201 samples, 0.28%)</title><rect x="7.7725%" y="292" width="0.2803%" height="15" fill="rgb(221,10,30)" fg:x="5574" fg:w="201"/><text x="8.0225%" y="302.50"></text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:576) (206 samples, 0.29%)</title><rect x="7.7670%" y="276" width="0.2873%" height="15" fill="rgb(210,229,1)" fg:x="5570" fg:w="206"/><text x="8.0170%" y="286.50"></text></g><g><title>__init__ (scipy/optimize/_differentiable_functions.py:177) (371 samples, 0.52%)</title><rect x="7.5508%" y="212" width="0.5173%" height="15" fill="rgb(222,148,37)" fg:x="5415" fg:w="371"/><text x="7.8008%" y="222.50"></text></g><g><title>_update_grad (scipy/optimize/_differentiable_functions.py:256) (370 samples, 0.52%)</title><rect x="7.5522%" y="228" width="0.5159%" height="15" fill="rgb(234,67,33)" fg:x="5416" fg:w="370"/><text x="7.8022%" y="238.50"></text></g><g><title>update_grad (scipy/optimize/_differentiable_functions.py:173) (370 samples, 0.52%)</title><rect x="7.5522%" y="244" width="0.5159%" height="15" fill="rgb(247,98,35)" fg:x="5416" fg:w="370"/><text x="7.8022%" y="254.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:505) (240 samples, 0.33%)</title><rect x="7.7335%" y="260" width="0.3347%" height="15" fill="rgb(247,138,52)" fg:x="5546" fg:w="240"/><text x="7.9835%" y="270.50"></text></g><g><title>_minimize_lbfgsb (scipy/optimize/_lbfgsb_py.py:305) (512 samples, 0.71%)</title><rect x="7.3682%" y="180" width="0.7139%" height="15" fill="rgb(213,79,30)" fg:x="5284" fg:w="512"/><text x="7.6182%" y="190.50"></text></g><g><title>_prepare_scalar_function (scipy/optimize/_optimize.py:332) (510 samples, 0.71%)</title><rect x="7.3709%" y="196" width="0.7112%" height="15" fill="rgb(246,177,23)" fg:x="5286" fg:w="510"/><text x="7.6209%" y="206.50"></text></g><g><title>_minimize_lbfgsb (scipy/optimize/_lbfgsb_py.py:350) (327 samples, 0.46%)</title><rect x="8.1114%" y="180" width="0.4560%" height="15" fill="rgb(230,62,27)" fg:x="5817" fg:w="327"/><text x="8.3614%" y="190.50"></text></g><g><title>array_equal (&lt;__array_function__ internals&gt;:180) (504 samples, 0.70%)</title><rect x="8.8769%" y="212" width="0.7028%" height="15" fill="rgb(216,154,8)" fg:x="6366" fg:w="504"/><text x="9.1269%" y="222.50"></text></g><g><title>array_equal (numpy/core/numeric.py:2463) (426 samples, 0.59%)</title><rect x="8.9857%" y="228" width="0.5940%" height="15" fill="rgb(244,35,45)" fg:x="6444" fg:w="426"/><text x="9.2357%" y="238.50"></text></g><g><title>_all (numpy/core/_methods.py:63) (256 samples, 0.36%)</title><rect x="9.2227%" y="244" width="0.3570%" height="15" fill="rgb(251,115,12)" fg:x="6614" fg:w="256"/><text x="9.4727%" y="254.50"></text></g><g><title>fun_and_grad (scipy/optimize/_differentiable_functions.py:283) (574 samples, 0.80%)</title><rect x="8.7821%" y="196" width="0.8004%" height="15" fill="rgb(240,54,50)" fg:x="6298" fg:w="574"/><text x="9.0321%" y="206.50"></text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;:180) (103 samples, 0.14%)</title><rect x="9.8042%" y="228" width="0.1436%" height="15" fill="rgb(233,84,52)" fg:x="7031" fg:w="103"/><text x="10.0542%" y="238.50"></text></g><g><title>update_x (scipy/optimize/_differentiable_functions.py:243) (241 samples, 0.34%)</title><rect x="9.6202%" y="212" width="0.3361%" height="15" fill="rgb(207,117,47)" fg:x="6899" fg:w="241"/><text x="9.8702%" y="222.50"></text></g><g><title>fun_and_grad (scipy/optimize/_differentiable_functions.py:284) (282 samples, 0.39%)</title><rect x="9.5825%" y="196" width="0.3932%" height="15" fill="rgb(249,43,39)" fg:x="6872" fg:w="282"/><text x="9.8325%" y="206.50"></text></g><g><title>copy (&lt;__array_function__ internals&gt;:180) (76 samples, 0.11%)</title><rect x="10.2170%" y="260" width="0.1060%" height="15" fill="rgb(209,38,44)" fg:x="7327" fg:w="76"/><text x="10.4670%" y="270.50"></text></g><g><title>guesses (center_guess.py:148) (134 samples, 0.19%)</title><rect x="10.3243%" y="260" width="0.1869%" height="15" fill="rgb(236,212,23)" fg:x="7404" fg:w="134"/><text x="10.5743%" y="270.50"></text></g><g><title>_amax (numpy/core/_methods.py:40) (308 samples, 0.43%)</title><rect x="11.2837%" y="276" width="0.4295%" height="15" fill="rgb(242,79,21)" fg:x="8092" fg:w="308"/><text x="11.5337%" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py:48) (350 samples, 0.49%)</title><rect x="11.7132%" y="276" width="0.4880%" height="15" fill="rgb(211,96,35)" fg:x="8400" fg:w="350"/><text x="11.9632%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:129) (236 samples, 0.33%)</title><rect x="12.2082%" y="276" width="0.3291%" height="15" fill="rgb(253,215,40)" fg:x="8755" fg:w="236"/><text x="12.4582%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:130) (151 samples, 0.21%)</title><rect x="12.5373%" y="276" width="0.2106%" height="15" fill="rgb(211,81,21)" fg:x="8991" fg:w="151"/><text x="12.7873%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:132) (81 samples, 0.11%)</title><rect x="12.7479%" y="276" width="0.1129%" height="15" fill="rgb(208,190,38)" fg:x="9142" fg:w="81"/><text x="12.9979%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:135) (227 samples, 0.32%)</title><rect x="12.8957%" y="276" width="0.3165%" height="15" fill="rgb(235,213,38)" fg:x="9248" fg:w="227"/><text x="13.1457%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:136) (119 samples, 0.17%)</title><rect x="13.2122%" y="276" width="0.1659%" height="15" fill="rgb(237,122,38)" fg:x="9475" fg:w="119"/><text x="13.4622%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:137) (140 samples, 0.20%)</title><rect x="13.3781%" y="276" width="0.1952%" height="15" fill="rgb(244,218,35)" fg:x="9594" fg:w="140"/><text x="13.6281%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:138) (75 samples, 0.10%)</title><rect x="13.5734%" y="276" width="0.1046%" height="15" fill="rgb(240,68,47)" fg:x="9734" fg:w="75"/><text x="13.8234%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:139) (128 samples, 0.18%)</title><rect x="13.6779%" y="276" width="0.1785%" height="15" fill="rgb(210,16,53)" fg:x="9809" fg:w="128"/><text x="13.9279%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:140) (98 samples, 0.14%)</title><rect x="13.8564%" y="276" width="0.1367%" height="15" fill="rgb(235,124,12)" fg:x="9937" fg:w="98"/><text x="14.1064%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:142) (2,290 samples, 3.19%)</title><rect x="13.9931%" y="276" width="3.1932%" height="15" fill="rgb(224,169,11)" fg:x="10035" fg:w="2290"/><text x="14.2431%" y="286.50">gau..</text></g><g><title>gaussian_2d (center_guess.py:143) (271 samples, 0.38%)</title><rect x="17.1863%" y="276" width="0.3779%" height="15" fill="rgb(250,166,2)" fg:x="12325" fg:w="271"/><text x="17.4363%" y="286.50"></text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:137) (5,366 samples, 7.48%)</title><rect x="10.0873%" y="244" width="7.4825%" height="15" fill="rgb(242,216,29)" fg:x="7234" fg:w="5366"/><text x="10.3373%" y="254.50">fun_wrappe..</text></g><g><title>guesses (center_guess.py:149) (5,062 samples, 7.06%)</title><rect x="10.5112%" y="260" width="7.0586%" height="15" fill="rgb(230,116,27)" fg:x="7538" fg:w="5062"/><text x="10.7612%" y="270.50">guesses (..</text></g><g><title>_update_fun (scipy/optimize/_differentiable_functions.py:251) (5,504 samples, 7.67%)</title><rect x="10.0120%" y="212" width="7.6749%" height="15" fill="rgb(228,99,48)" fg:x="7180" fg:w="5504"/><text x="10.2620%" y="222.50">_update_fun..</text></g><g><title>update_fun (scipy/optimize/_differentiable_functions.py:155) (5,493 samples, 7.66%)</title><rect x="10.0273%" y="228" width="7.6596%" height="15" fill="rgb(253,11,6)" fg:x="7191" fg:w="5493"/><text x="10.2773%" y="238.50">update_fun..</text></g><g><title>fun_and_grad (scipy/optimize/_differentiable_functions.py:285) (5,533 samples, 7.72%)</title><rect x="9.9757%" y="196" width="7.7154%" height="15" fill="rgb(247,143,39)" fg:x="7154" fg:w="5533"/><text x="10.2257%" y="206.50">fun_and_gra..</text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:441) (173 samples, 0.24%)</title><rect x="18.0537%" y="244" width="0.2412%" height="15" fill="rgb(236,97,10)" fg:x="12947" fg:w="173"/><text x="18.3037%" y="254.50"></text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;:180) (123 samples, 0.17%)</title><rect x="18.1234%" y="260" width="0.1715%" height="15" fill="rgb(233,208,19)" fg:x="12997" fg:w="123"/><text x="18.3734%" y="270.50"></text></g><g><title>_prepare_bounds (scipy/optimize/_numdiff.py:204) (101 samples, 0.14%)</title><rect x="18.3256%" y="260" width="0.1408%" height="15" fill="rgb(216,164,2)" fg:x="13142" fg:w="101"/><text x="18.5756%" y="270.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:445) (138 samples, 0.19%)</title><rect x="18.2991%" y="244" width="0.1924%" height="15" fill="rgb(220,129,5)" fg:x="13123" fg:w="138"/><text x="18.5491%" y="254.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:465) (221 samples, 0.31%)</title><rect x="18.5557%" y="244" width="0.3082%" height="15" fill="rgb(242,17,10)" fg:x="13307" fg:w="221"/><text x="18.8057%" y="254.50"></text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;:180) (192 samples, 0.27%)</title><rect x="18.5961%" y="260" width="0.2677%" height="15" fill="rgb(242,107,0)" fg:x="13336" fg:w="192"/><text x="18.8461%" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:70) (77 samples, 0.11%)</title><rect x="19.3881%" y="292" width="0.1074%" height="15" fill="rgb(251,28,31)" fg:x="13904" fg:w="77"/><text x="19.6381%" y="302.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:469) (715 samples, 1.00%)</title><rect x="18.8750%" y="244" width="0.9970%" height="15" fill="rgb(233,223,10)" fg:x="13536" fg:w="715"/><text x="19.1250%" y="254.50"></text></g><g><title>any (&lt;__array_function__ internals&gt;:180) (475 samples, 0.66%)</title><rect x="19.2096%" y="260" width="0.6624%" height="15" fill="rgb(215,21,27)" fg:x="13776" fg:w="475"/><text x="19.4596%" y="270.50"></text></g><g><title>any (numpy/core/fromnumeric.py:2397) (418 samples, 0.58%)</title><rect x="19.2891%" y="276" width="0.5829%" height="15" fill="rgb(232,23,21)" fg:x="13833" fg:w="418"/><text x="19.5391%" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (247 samples, 0.34%)</title><rect x="19.5276%" y="292" width="0.3444%" height="15" fill="rgb(244,5,23)" fg:x="14004" fg:w="247"/><text x="19.7776%" y="302.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:484) (530 samples, 0.74%)</title><rect x="19.8831%" y="244" width="0.7390%" height="15" fill="rgb(226,81,46)" fg:x="14259" fg:w="530"/><text x="20.1331%" y="254.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:489) (162 samples, 0.23%)</title><rect x="20.6264%" y="244" width="0.2259%" height="15" fill="rgb(247,70,30)" fg:x="14792" fg:w="162"/><text x="20.8764%" y="254.50"></text></g><g><title>where (&lt;__array_function__ internals&gt;:180) (250 samples, 0.35%)</title><rect x="21.1047%" y="260" width="0.3486%" height="15" fill="rgb(212,68,19)" fg:x="15135" fg:w="250"/><text x="21.3547%" y="270.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:490) (434 samples, 0.61%)</title><rect x="20.8523%" y="244" width="0.6052%" height="15" fill="rgb(240,187,13)" fg:x="14954" fg:w="434"/><text x="21.1023%" y="254.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:491) (205 samples, 0.29%)</title><rect x="21.4575%" y="244" width="0.2859%" height="15" fill="rgb(223,113,26)" fg:x="15388" fg:w="205"/><text x="21.7075%" y="254.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:492) (142 samples, 0.20%)</title><rect x="21.7433%" y="244" width="0.1980%" height="15" fill="rgb(206,192,2)" fg:x="15593" fg:w="142"/><text x="21.9933%" y="254.50"></text></g><g><title>ones_like (numpy/core/numeric.py:280) (178 samples, 0.25%)</title><rect x="22.2565%" y="292" width="0.2482%" height="15" fill="rgb(241,108,4)" fg:x="15961" fg:w="178"/><text x="22.5065%" y="302.50"></text></g><g><title>empty_like (&lt;__array_function__ internals&gt;:180) (113 samples, 0.16%)</title><rect x="22.3471%" y="308" width="0.1576%" height="15" fill="rgb(247,173,49)" fg:x="16026" fg:w="113"/><text x="22.5971%" y="318.50"></text></g><g><title>copyto (&lt;__array_function__ internals&gt;:180) (131 samples, 0.18%)</title><rect x="22.5828%" y="308" width="0.1827%" height="15" fill="rgb(224,114,35)" fg:x="16195" fg:w="131"/><text x="22.8328%" y="318.50"></text></g><g><title>ones_like (numpy/core/numeric.py:281) (191 samples, 0.27%)</title><rect x="22.5047%" y="292" width="0.2663%" height="15" fill="rgb(245,159,27)" fg:x="16139" fg:w="191"/><text x="22.7547%" y="302.50"></text></g><g><title>ones_like (&lt;__array_function__ internals&gt;:180) (410 samples, 0.57%)</title><rect x="22.2035%" y="276" width="0.5717%" height="15" fill="rgb(245,172,44)" fg:x="15923" fg:w="410"/><text x="22.4535%" y="286.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:43) (518 samples, 0.72%)</title><rect x="22.0543%" y="260" width="0.7223%" height="15" fill="rgb(236,23,11)" fg:x="15816" fg:w="518"/><text x="22.3043%" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (299 samples, 0.42%)</title><rect x="23.3622%" y="292" width="0.4169%" height="15" fill="rgb(205,117,38)" fg:x="16754" fg:w="299"/><text x="23.6122%" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (216 samples, 0.30%)</title><rect x="23.4780%" y="308" width="0.3012%" height="15" fill="rgb(237,72,25)" fg:x="16837" fg:w="216"/><text x="23.7280%" y="318.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:50) (720 samples, 1.00%)</title><rect x="22.7766%" y="260" width="1.0040%" height="15" fill="rgb(244,70,9)" fg:x="16334" fg:w="720"/><text x="23.0266%" y="270.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (325 samples, 0.45%)</title><rect x="23.3274%" y="276" width="0.4532%" height="15" fill="rgb(217,125,39)" fg:x="16729" fg:w="325"/><text x="23.5774%" y="286.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:53) (166 samples, 0.23%)</title><rect x="23.7806%" y="260" width="0.2315%" height="15" fill="rgb(235,36,10)" fg:x="17054" fg:w="166"/><text x="24.0306%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:61) (131 samples, 0.18%)</title><rect x="24.3523%" y="260" width="0.1827%" height="15" fill="rgb(251,123,47)" fg:x="17464" fg:w="131"/><text x="24.6023%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:62) (178 samples, 0.25%)</title><rect x="24.5350%" y="260" width="0.2482%" height="15" fill="rgb(221,13,13)" fg:x="17595" fg:w="178"/><text x="24.7850%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:63) (310 samples, 0.43%)</title><rect x="24.7832%" y="260" width="0.4323%" height="15" fill="rgb(238,131,9)" fg:x="17773" fg:w="310"/><text x="25.0332%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:65) (147 samples, 0.20%)</title><rect x="25.2154%" y="260" width="0.2050%" height="15" fill="rgb(211,50,8)" fg:x="18083" fg:w="147"/><text x="25.4654%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:66) (162 samples, 0.23%)</title><rect x="25.4204%" y="260" width="0.2259%" height="15" fill="rgb(245,182,24)" fg:x="18230" fg:w="162"/><text x="25.6704%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:67) (117 samples, 0.16%)</title><rect x="25.6463%" y="260" width="0.1631%" height="15" fill="rgb(242,14,37)" fg:x="18392" fg:w="117"/><text x="25.8963%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:68) (155 samples, 0.22%)</title><rect x="25.8095%" y="260" width="0.2161%" height="15" fill="rgb(246,228,12)" fg:x="18509" fg:w="155"/><text x="26.0595%" y="270.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:496) (2,915 samples, 4.06%)</title><rect x="21.9650%" y="244" width="4.0648%" height="15" fill="rgb(213,55,15)" fg:x="15752" fg:w="2915"/><text x="22.2150%" y="254.50">appr..</text></g><g><title>diag (numpy/lib/twodim_base.py:304) (180 samples, 0.25%)</title><rect x="26.4872%" y="292" width="0.2510%" height="15" fill="rgb(209,9,3)" fg:x="18995" fg:w="180"/><text x="26.7372%" y="302.50"></text></g><g><title>diag (&lt;__array_function__ internals&gt;:180) (337 samples, 0.47%)</title><rect x="26.2780%" y="276" width="0.4699%" height="15" fill="rgb(230,59,30)" fg:x="18845" fg:w="337"/><text x="26.5280%" y="286.50"></text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:570) (380 samples, 0.53%)</title><rect x="26.2194%" y="260" width="0.5299%" height="15" fill="rgb(209,121,21)" fg:x="18803" fg:w="380"/><text x="26.4694%" y="270.50"></text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:572) (76 samples, 0.11%)</title><rect x="26.7493%" y="260" width="0.1060%" height="15" fill="rgb(220,109,13)" fg:x="19183" fg:w="76"/><text x="26.9993%" y="270.50"></text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:574) (195 samples, 0.27%)</title><rect x="26.8804%" y="260" width="0.2719%" height="15" fill="rgb(232,18,1)" fg:x="19277" fg:w="195"/><text x="27.1304%" y="270.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py:65) (84 samples, 0.12%)</title><rect x="28.1298%" y="308" width="0.1171%" height="15" fill="rgb(215,41,42)" fg:x="20173" fg:w="84"/><text x="28.3798%" y="318.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py:67) (92 samples, 0.13%)</title><rect x="28.2860%" y="308" width="0.1283%" height="15" fill="rgb(224,123,36)" fg:x="20285" fg:w="92"/><text x="28.5360%" y="318.50"></text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;:180) (496 samples, 0.69%)</title><rect x="27.8091%" y="292" width="0.6916%" height="15" fill="rgb(240,125,3)" fg:x="19943" fg:w="496"/><text x="28.0591%" y="302.50"></text></g><g><title>copy (&lt;__array_function__ internals&gt;:180) (207 samples, 0.29%)</title><rect x="28.7963%" y="308" width="0.2886%" height="15" fill="rgb(205,98,50)" fg:x="20651" fg:w="207"/><text x="29.0463%" y="318.50"></text></g><g><title>copy (numpy/lib/function_base.py:959) (154 samples, 0.21%)</title><rect x="28.8702%" y="324" width="0.2147%" height="15" fill="rgb(205,185,37)" fg:x="20704" fg:w="154"/><text x="29.1202%" y="334.50"></text></g><g><title>guesses (center_guess.py:148) (245 samples, 0.34%)</title><rect x="29.0906%" y="308" width="0.3416%" height="15" fill="rgb(238,207,15)" fg:x="20862" fg:w="245"/><text x="29.3406%" y="318.50"></text></g><g><title>_amax (numpy/core/_methods.py:40) (710 samples, 0.99%)</title><rect x="30.9005%" y="324" width="0.9900%" height="15" fill="rgb(213,199,42)" fg:x="22160" fg:w="710"/><text x="31.1505%" y="334.50"></text></g><g><title>_sum (numpy/core/_methods.py:48) (678 samples, 0.95%)</title><rect x="31.8947%" y="324" width="0.9454%" height="15" fill="rgb(235,201,11)" fg:x="22873" fg:w="678"/><text x="32.1447%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:129) (476 samples, 0.66%)</title><rect x="32.8555%" y="324" width="0.6637%" height="15" fill="rgb(207,46,11)" fg:x="23562" fg:w="476"/><text x="33.1055%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:130) (312 samples, 0.44%)</title><rect x="33.5193%" y="324" width="0.4351%" height="15" fill="rgb(241,35,35)" fg:x="24038" fg:w="312"/><text x="33.7693%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:132) (156 samples, 0.22%)</title><rect x="33.9543%" y="324" width="0.2175%" height="15" fill="rgb(243,32,47)" fg:x="24350" fg:w="156"/><text x="34.2043%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:135) (474 samples, 0.66%)</title><rect x="34.2234%" y="324" width="0.6610%" height="15" fill="rgb(247,202,23)" fg:x="24543" fg:w="474"/><text x="34.4734%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:136) (232 samples, 0.32%)</title><rect x="34.8844%" y="324" width="0.3235%" height="15" fill="rgb(219,102,11)" fg:x="25017" fg:w="232"/><text x="35.1344%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:137) (245 samples, 0.34%)</title><rect x="35.2079%" y="324" width="0.3416%" height="15" fill="rgb(243,110,44)" fg:x="25249" fg:w="245"/><text x="35.4579%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:138) (139 samples, 0.19%)</title><rect x="35.5495%" y="324" width="0.1938%" height="15" fill="rgb(222,74,54)" fg:x="25494" fg:w="139"/><text x="35.7995%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:139) (178 samples, 0.25%)</title><rect x="35.7434%" y="324" width="0.2482%" height="15" fill="rgb(216,99,12)" fg:x="25633" fg:w="178"/><text x="35.9934%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:140) (187 samples, 0.26%)</title><rect x="35.9916%" y="324" width="0.2608%" height="15" fill="rgb(226,22,26)" fg:x="25811" fg:w="187"/><text x="36.2416%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:142) (4,364 samples, 6.09%)</title><rect x="36.2523%" y="324" width="6.0853%" height="15" fill="rgb(217,163,10)" fg:x="25998" fg:w="4364"/><text x="36.5023%" y="334.50">gaussian..</text></g><g><title>gaussian_2d (center_guess.py:143) (496 samples, 0.69%)</title><rect x="42.3376%" y="324" width="0.6916%" height="15" fill="rgb(213,25,53)" fg:x="30362" fg:w="496"/><text x="42.5876%" y="334.50"></text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:137) (10,376 samples, 14.47%)</title><rect x="28.5704%" y="292" width="14.4686%" height="15" fill="rgb(252,105,26)" fg:x="20489" fg:w="10376"/><text x="28.8204%" y="302.50">fun_wrapped (scipy/opt..</text></g><g><title>guesses (center_guess.py:149) (9,758 samples, 13.61%)</title><rect x="29.4322%" y="308" width="13.6068%" height="15" fill="rgb(220,39,43)" fg:x="21107" fg:w="9758"/><text x="29.6822%" y="318.50">guesses (center_guess..</text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:139) (80 samples, 0.11%)</title><rect x="43.0390%" y="292" width="0.1116%" height="15" fill="rgb(229,68,48)" fg:x="30865" fg:w="80"/><text x="43.2890%" y="302.50"></text></g><g><title>fun_wrapped (scipy/optimize/_numdiff.py:456) (11,230 samples, 15.66%)</title><rect x="27.5637%" y="276" width="15.6594%" height="15" fill="rgb(252,8,32)" fg:x="19767" fg:w="11230"/><text x="27.8137%" y="286.50">fun_wrapped (scipy/optim..</text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:576) (11,472 samples, 16.00%)</title><rect x="27.2429%" y="260" width="15.9969%" height="15" fill="rgb(223,20,43)" fg:x="19537" fg:w="11472"/><text x="27.4929%" y="270.50">_dense_difference (scipy/..</text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:598) (379 samples, 0.53%)</title><rect x="43.2398%" y="260" width="0.5285%" height="15" fill="rgb(229,81,49)" fg:x="31009" fg:w="379"/><text x="43.4898%" y="270.50"></text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:601) (150 samples, 0.21%)</title><rect x="43.7739%" y="260" width="0.2092%" height="15" fill="rgb(236,28,36)" fg:x="31392" fg:w="150"/><text x="44.0239%" y="270.50"></text></g><g><title>ravel (&lt;__array_function__ internals&gt;:180) (103 samples, 0.14%)</title><rect x="43.8394%" y="276" width="0.1436%" height="15" fill="rgb(249,185,26)" fg:x="31439" fg:w="103"/><text x="44.0894%" y="286.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:505) (12,893 samples, 17.98%)</title><rect x="26.0395%" y="244" width="17.9784%" height="15" fill="rgb(249,174,33)" fg:x="18674" fg:w="12893"/><text x="26.2895%" y="254.50">approx_derivative (scipy/opt..</text></g><g><title>update_grad (scipy/optimize/_differentiable_functions.py:173) (18,805 samples, 26.22%)</title><rect x="17.7985%" y="228" width="26.2222%" height="15" fill="rgb(233,201,37)" fg:x="12764" fg:w="18805"/><text x="18.0485%" y="238.50">update_grad (scipy/optimize/_differentiabl..</text></g><g><title>_update_grad (scipy/optimize/_differentiable_functions.py:256) (18,869 samples, 26.31%)</title><rect x="17.7106%" y="212" width="26.3115%" height="15" fill="rgb(221,78,26)" fg:x="12701" fg:w="18869"/><text x="17.9606%" y="222.50">_update_grad (scipy/optimize/_differentiab..</text></g><g><title>fun_and_grad (scipy/optimize/_differentiable_functions.py:286) (18,888 samples, 26.34%)</title><rect x="17.6911%" y="196" width="26.3380%" height="15" fill="rgb(250,127,30)" fg:x="12687" fg:w="18888"/><text x="17.9411%" y="206.50">fun_and_grad (scipy/optimize/_differentiab..</text></g><g><title>_minimize_lbfgsb (scipy/optimize/_lbfgsb_py.py:359) (25,350 samples, 35.35%)</title><rect x="8.6998%" y="180" width="35.3487%" height="15" fill="rgb(230,49,44)" fg:x="6239" fg:w="25350"/><text x="8.9498%" y="190.50">_minimize_lbfgsb (scipy/optimize/_lbfgsb_py.py:359)</text></g><g><title>StarCenterFixedGauss (center_guess.py:150) (26,595 samples, 37.08%)</title><rect x="7.0739%" y="148" width="37.0848%" height="15" fill="rgb(229,67,23)" fg:x="5073" fg:w="26595"/><text x="7.3239%" y="158.50">StarCenterFixedGauss (center_guess.py:150)</text></g><g><title>minimize (scipy/optimize/_minimize.py:696) (26,425 samples, 36.85%)</title><rect x="7.3110%" y="164" width="36.8478%" height="15" fill="rgb(249,83,47)" fg:x="5243" fg:w="26425"/><text x="7.5610%" y="174.50">minimize (scipy/optimize/_minimize.py:696)</text></g><g><title>StarCenterFixedGauss (center_guess.py:152) (72 samples, 0.10%)</title><rect x="44.1615%" y="148" width="0.1004%" height="15" fill="rgb(215,43,3)" fg:x="31670" fg:w="72"/><text x="44.4115%" y="158.50"></text></g><g><title>progress (pynpoint/util/module.py:88) (79 samples, 0.11%)</title><rect x="44.4432%" y="180" width="0.1102%" height="15" fill="rgb(238,154,13)" fg:x="31872" fg:w="79"/><text x="44.6932%" y="190.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (118 samples, 0.16%)</title><rect x="44.4042%" y="164" width="0.1645%" height="15" fill="rgb(219,56,2)" fg:x="31844" fg:w="118"/><text x="44.6542%" y="174.50"></text></g><g><title>StarCenterFixedGauss (center_guess.py:72) (216 samples, 0.30%)</title><rect x="44.2731%" y="148" width="0.3012%" height="15" fill="rgb(233,0,4)" fg:x="31750" fg:w="216"/><text x="44.5231%" y="158.50"></text></g><g><title>pixel_distance (pynpoint/util/image.py:443) (75 samples, 0.10%)</title><rect x="44.8392%" y="180" width="0.1046%" height="15" fill="rgb(235,30,7)" fg:x="32156" fg:w="75"/><text x="45.0892%" y="190.50"></text></g><g><title>meshgrid (&lt;__array_function__ internals&gt;:180) (75 samples, 0.10%)</title><rect x="44.8392%" y="196" width="0.1046%" height="15" fill="rgb(250,79,13)" fg:x="32156" fg:w="75"/><text x="45.0892%" y="206.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (181 samples, 0.25%)</title><rect x="44.7179%" y="164" width="0.2524%" height="15" fill="rgb(211,146,34)" fg:x="32069" fg:w="181"/><text x="44.9679%" y="174.50"></text></g><g><title>StarCenterFixedGauss (center_guess.py:77) (308 samples, 0.43%)</title><rect x="44.5826%" y="148" width="0.4295%" height="15" fill="rgb(228,22,38)" fg:x="31972" fg:w="308"/><text x="44.8326%" y="158.50"></text></g><g><title>wrapper (typeguard/__init__.py:1031) (76 samples, 0.11%)</title><rect x="45.0135%" y="164" width="0.1060%" height="15" fill="rgb(235,168,5)" fg:x="32281" fg:w="76"/><text x="45.2635%" y="174.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (179 samples, 0.25%)</title><rect x="45.2868%" y="196" width="0.2496%" height="15" fill="rgb(221,155,16)" fg:x="32477" fg:w="179"/><text x="45.5368%" y="206.50"></text></g><g><title>subpixel_distance (pynpoint/util/image.py:473) (285 samples, 0.40%)</title><rect x="45.1836%" y="180" width="0.3974%" height="15" fill="rgb(215,215,53)" fg:x="32403" fg:w="285"/><text x="45.4336%" y="190.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (302 samples, 0.42%)</title><rect x="45.1836%" y="164" width="0.4211%" height="15" fill="rgb(223,4,10)" fg:x="32403" fg:w="302"/><text x="45.4336%" y="174.50"></text></g><g><title>StarCenterFixedGauss (center_guess.py:79) (433 samples, 0.60%)</title><rect x="45.0121%" y="148" width="0.6038%" height="15" fill="rgb(234,103,6)" fg:x="32280" fg:w="433"/><text x="45.2621%" y="158.50"></text></g><g><title>__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:207) (27,671 samples, 38.59%)</title><rect x="7.0725%" y="132" width="38.5852%" height="15" fill="rgb(227,97,0)" fg:x="5072" fg:w="27671"/><text x="7.3225%" y="142.50">__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:207)</text></g><g><title>wrapper (typeguard/__init__.py:1031) (116 samples, 0.16%)</title><rect x="45.6717%" y="212" width="0.1618%" height="15" fill="rgb(234,150,53)" fg:x="32753" fg:w="116"/><text x="45.9217%" y="222.50"></text></g><g><title>_check_error_cases (pynpoint/core/dataio.py:430) (82 samples, 0.11%)</title><rect x="46.0189%" y="260" width="0.1143%" height="15" fill="rgb(228,201,54)" fg:x="33002" fg:w="82"/><text x="46.2689%" y="270.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (126 samples, 0.18%)</title><rect x="45.9589%" y="244" width="0.1757%" height="15" fill="rgb(222,22,37)" fg:x="32959" fg:w="126"/><text x="46.2089%" y="254.50"></text></g><g><title>__getitem__ (pynpoint/core/dataio.py:458) (166 samples, 0.23%)</title><rect x="45.9074%" y="228" width="0.2315%" height="15" fill="rgb(237,53,32)" fg:x="32922" fg:w="166"/><text x="46.1574%" y="238.50"></text></g><g><title>__getitem__ (h5py/_hl/dataset.py:741) (830 samples, 1.16%)</title><rect x="46.4972%" y="244" width="1.1574%" height="15" fill="rgb(233,25,53)" fg:x="33345" fg:w="830"/><text x="46.7472%" y="254.50"></text></g><g><title>_fast_reader (h5py/_hl/dataset.py:506) (86 samples, 0.12%)</title><rect x="47.5347%" y="260" width="0.1199%" height="15" fill="rgb(210,40,34)" fg:x="34089" fg:w="86"/><text x="47.7847%" y="270.50"></text></g><g><title>__getitem__ (pynpoint/core/dataio.py:462) (1,302 samples, 1.82%)</title><rect x="46.1388%" y="228" width="1.8155%" height="15" fill="rgb(241,220,44)" fg:x="33088" fg:w="1302"/><text x="46.3888%" y="238.50">_..</text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (159 samples, 0.22%)</title><rect x="47.7327%" y="244" width="0.2217%" height="15" fill="rgb(235,28,35)" fg:x="34231" fg:w="159"/><text x="47.9827%" y="254.50"></text></g><g><title>shift (scipy/ndimage/_interpolation.py:678) (102 samples, 0.14%)</title><rect x="47.9920%" y="244" width="0.1422%" height="15" fill="rgb(210,56,17)" fg:x="34417" fg:w="102"/><text x="48.2420%" y="254.50"></text></g><g><title>spline_filter (scipy/ndimage/_interpolation.py:191) (94 samples, 0.13%)</title><rect x="48.0032%" y="260" width="0.1311%" height="15" fill="rgb(224,130,29)" fg:x="34425" fg:w="94"/><text x="48.2532%" y="270.50"></text></g><g><title>spline_filter1d (scipy/ndimage/_interpolation.py:132) (83 samples, 0.12%)</title><rect x="48.0185%" y="276" width="0.1157%" height="15" fill="rgb(235,212,8)" fg:x="34436" fg:w="83"/><text x="48.2685%" y="286.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (2,347 samples, 3.27%)</title><rect x="45.9060%" y="212" width="3.2727%" height="15" fill="rgb(223,33,50)" fg:x="32921" fg:w="2347"/><text x="46.1560%" y="222.50">wra..</text></g><g><title>shift_image (pynpoint/util/image.py:285) (876 samples, 1.22%)</title><rect x="47.9572%" y="228" width="1.2215%" height="15" fill="rgb(219,149,13)" fg:x="34392" fg:w="876"/><text x="48.2072%" y="238.50"></text></g><g><title>shift (scipy/ndimage/_interpolation.py:689) (736 samples, 1.03%)</title><rect x="48.1524%" y="244" width="1.0263%" height="15" fill="rgb(250,156,29)" fg:x="34532" fg:w="736"/><text x="48.4024%" y="254.50"></text></g><g><title>wrapper (typeguard/__init__.py:1035) (77 samples, 0.11%)</title><rect x="49.1787%" y="212" width="0.1074%" height="15" fill="rgb(216,193,19)" fg:x="35268" fg:w="77"/><text x="49.4287%" y="222.50"></text></g><g><title>run (pynpoint/processing/centering.py:472) (2,603 samples, 3.63%)</title><rect x="45.6605%" y="196" width="3.6297%" height="15" fill="rgb(216,135,14)" fg:x="32745" fg:w="2603"/><text x="45.9105%" y="206.50">run ..</text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (141 samples, 0.20%)</title><rect x="49.8466%" y="276" width="0.1966%" height="15" fill="rgb(241,47,5)" fg:x="35747" fg:w="141"/><text x="50.0966%" y="286.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1027) (375 samples, 0.52%)</title><rect x="49.6667%" y="260" width="0.5229%" height="15" fill="rgb(233,42,35)" fg:x="35618" fg:w="375"/><text x="49.9167%" y="270.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (128 samples, 0.18%)</title><rect x="50.4211%" y="276" width="0.1785%" height="15" fill="rgb(231,13,6)" fg:x="36159" fg:w="128"/><text x="50.6711%" y="286.50"></text></g><g><title>__setitem__ (h5py/_hl/dataset.py:847) (73 samples, 0.10%)</title><rect x="50.6024%" y="276" width="0.1018%" height="15" fill="rgb(207,181,40)" fg:x="36289" fg:w="73"/><text x="50.8524%" y="286.50"></text></g><g><title>__setitem__ (h5py/_hl/dataset.py:947) (115 samples, 0.16%)</title><rect x="50.7195%" y="276" width="0.1604%" height="15" fill="rgb(254,173,49)" fg:x="36373" fg:w="115"/><text x="50.9695%" y="286.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1028) (613 samples, 0.85%)</title><rect x="50.1896%" y="260" width="0.8548%" height="15" fill="rgb(221,1,38)" fg:x="35993" fg:w="613"/><text x="50.4396%" y="270.50"></text></g><g><title>__setitem__ (h5py/_hl/dataset.py:982) (87 samples, 0.12%)</title><rect x="50.9231%" y="276" width="0.1213%" height="15" fill="rgb(206,124,46)" fg:x="36519" fg:w="87"/><text x="51.1731%" y="286.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (116 samples, 0.16%)</title><rect x="51.2661%" y="276" width="0.1618%" height="15" fill="rgb(249,21,11)" fg:x="36765" fg:w="116"/><text x="51.5161%" y="286.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:961) (270 samples, 0.38%)</title><rect x="51.0960%" y="260" width="0.3765%" height="15" fill="rgb(222,201,40)" fg:x="36643" fg:w="270"/><text x="51.3460%" y="270.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,412 samples, 1.97%)</title><rect x="49.5649%" y="244" width="1.9689%" height="15" fill="rgb(235,61,29)" fg:x="35545" fg:w="1412"/><text x="49.8149%" y="254.50">w..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,527 samples, 2.13%)</title><rect x="49.4157%" y="212" width="2.1293%" height="15" fill="rgb(219,207,3)" fg:x="35438" fg:w="1527"/><text x="49.6657%" y="222.50">w..</text></g><g><title>append (pynpoint/core/dataio.py:1179) (1,491 samples, 2.08%)</title><rect x="49.4659%" y="228" width="2.0791%" height="15" fill="rgb(222,56,46)" fg:x="35474" fg:w="1491"/><text x="49.7159%" y="238.50">a..</text></g><g><title>run (pynpoint/processing/centering.py:477) (1,620 samples, 2.26%)</title><rect x="49.2916%" y="196" width="2.2590%" height="15" fill="rgb(239,76,54)" fg:x="35349" fg:w="1620"/><text x="49.5416%" y="206.50">r..</text></g><g><title>__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:214) (4,237 samples, 5.91%)</title><rect x="45.6591%" y="132" width="5.9082%" height="15" fill="rgb(231,124,27)" fg:x="32744" fg:w="4237"/><text x="45.9091%" y="142.50">__call__..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (4,237 samples, 5.91%)</title><rect x="45.6591%" y="148" width="5.9082%" height="15" fill="rgb(249,195,6)" fg:x="32744" fg:w="4237"/><text x="45.9091%" y="158.50">wrapper ..</text></g><g><title>run_module (pynpoint/core/pypeline.py:580) (4,236 samples, 5.91%)</title><rect x="45.6605%" y="164" width="5.9068%" height="15" fill="rgb(237,174,47)" fg:x="32745" fg:w="4236"/><text x="45.9105%" y="174.50">run_modu..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (4,236 samples, 5.91%)</title><rect x="45.6605%" y="180" width="5.9068%" height="15" fill="rgb(206,201,31)" fg:x="32745" fg:w="4236"/><text x="45.9105%" y="190.50">wrapper ..</text></g><g><title>aperture_photometry (photutils/aperture/photometry.py:217) (116 samples, 0.16%)</title><rect x="52.0275%" y="196" width="0.1618%" height="15" fill="rgb(231,57,52)" fg:x="37311" fg:w="116"/><text x="52.2775%" y="206.50"></text></g><g><title>__setitem__ (astropy/table/table.py:1904) (108 samples, 0.15%)</title><rect x="52.0387%" y="212" width="0.1506%" height="15" fill="rgb(248,177,22)" fg:x="37319" fg:w="108"/><text x="52.2887%" y="222.50"></text></g><g><title>aperture_photometry (photutils/aperture/photometry.py:218) (85 samples, 0.12%)</title><rect x="52.1893%" y="196" width="0.1185%" height="15" fill="rgb(215,211,37)" fg:x="37427" fg:w="85"/><text x="52.4393%" y="206.50"></text></g><g><title>__setitem__ (astropy/table/table.py:1904) (73 samples, 0.10%)</title><rect x="52.2060%" y="212" width="0.1018%" height="15" fill="rgb(241,128,51)" fg:x="37439" fg:w="73"/><text x="52.4560%" y="222.50"></text></g><g><title>_do_photometry (photutils/aperture/core.py:390) (132 samples, 0.18%)</title><rect x="52.3106%" y="212" width="0.1841%" height="15" fill="rgb(227,165,31)" fg:x="37514" fg:w="132"/><text x="52.5606%" y="222.50"></text></g><g><title>to_mask (photutils/aperture/circle.py:197) (132 samples, 0.18%)</title><rect x="52.3106%" y="228" width="0.1841%" height="15" fill="rgb(228,167,24)" fg:x="37514" fg:w="132"/><text x="52.5606%" y="238.50"></text></g><g><title>aperture_photometry (photutils/aperture/photometry.py:230) (198 samples, 0.28%)</title><rect x="52.3078%" y="196" width="0.2761%" height="15" fill="rgb(228,143,12)" fg:x="37512" fg:w="198"/><text x="52.5578%" y="206.50"></text></g><g><title>run (IFS_SimpleSubtraction.py:127) (728 samples, 1.02%)</title><rect x="51.7891%" y="180" width="1.0151%" height="15" fill="rgb(249,149,8)" fg:x="37140" fg:w="728"/><text x="52.0391%" y="190.50"></text></g><g><title>aperture_photometry (photutils/aperture/photometry.py:241) (158 samples, 0.22%)</title><rect x="52.5839%" y="196" width="0.2203%" height="15" fill="rgb(243,35,44)" fg:x="37710" fg:w="158"/><text x="52.8339%" y="206.50"></text></g><g><title>__setitem__ (astropy/table/table.py:1904) (155 samples, 0.22%)</title><rect x="52.5881%" y="212" width="0.2161%" height="15" fill="rgb(246,89,9)" fg:x="37713" fg:w="155"/><text x="52.8381%" y="222.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (169 samples, 0.24%)</title><rect x="53.3801%" y="260" width="0.2357%" height="15" fill="rgb(233,213,13)" fg:x="38281" fg:w="169"/><text x="53.6301%" y="270.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1027) (382 samples, 0.53%)</title><rect x="53.2128%" y="244" width="0.5327%" height="15" fill="rgb(233,141,41)" fg:x="38161" fg:w="382"/><text x="53.4628%" y="254.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (114 samples, 0.16%)</title><rect x="53.9630%" y="260" width="0.1590%" height="15" fill="rgb(239,167,4)" fg:x="38699" fg:w="114"/><text x="54.2130%" y="270.50"></text></g><g><title>__setitem__ (h5py/_hl/dataset.py:947) (92 samples, 0.13%)</title><rect x="54.2293%" y="260" width="0.1283%" height="15" fill="rgb(209,217,16)" fg:x="38890" fg:w="92"/><text x="54.4793%" y="270.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1028) (553 samples, 0.77%)</title><rect x="53.7454%" y="244" width="0.7711%" height="15" fill="rgb(219,88,35)" fg:x="38543" fg:w="553"/><text x="53.9954%" y="254.50"></text></g><g><title>__setitem__ (h5py/_hl/dataset.py:982) (83 samples, 0.12%)</title><rect x="54.4008%" y="260" width="0.1157%" height="15" fill="rgb(220,193,23)" fg:x="39013" fg:w="83"/><text x="54.6508%" y="270.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (185 samples, 0.26%)</title><rect x="54.7285%" y="260" width="0.2580%" height="15" fill="rgb(230,90,52)" fg:x="39248" fg:w="185"/><text x="54.9785%" y="270.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:961) (330 samples, 0.46%)</title><rect x="54.5723%" y="244" width="0.4602%" height="15" fill="rgb(252,106,19)" fg:x="39136" fg:w="330"/><text x="54.8223%" y="254.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,382 samples, 1.93%)</title><rect x="53.1305%" y="228" width="1.9271%" height="15" fill="rgb(206,74,20)" fg:x="38102" fg:w="1382"/><text x="53.3805%" y="238.50">w..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,504 samples, 2.10%)</title><rect x="52.9729%" y="196" width="2.0972%" height="15" fill="rgb(230,138,44)" fg:x="37989" fg:w="1504"/><text x="53.2229%" y="206.50">w..</text></g><g><title>append (pynpoint/core/dataio.py:1179) (1,464 samples, 2.04%)</title><rect x="53.0287%" y="212" width="2.0414%" height="15" fill="rgb(235,182,43)" fg:x="38029" fg:w="1464"/><text x="53.2787%" y="222.50">a..</text></g><g><title>run (IFS_SimpleSubtraction.py:136) (1,632 samples, 2.28%)</title><rect x="52.8070%" y="180" width="2.2757%" height="15" fill="rgb(242,16,51)" fg:x="37870" fg:w="1632"/><text x="53.0570%" y="190.50">r..</text></g><g><title>__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:220) (2,532 samples, 3.53%)</title><rect x="51.5687%" y="132" width="3.5307%" height="15" fill="rgb(248,9,4)" fg:x="36982" fg:w="2532"/><text x="51.8187%" y="142.50">__c..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (2,532 samples, 3.53%)</title><rect x="51.5687%" y="148" width="3.5307%" height="15" fill="rgb(210,31,22)" fg:x="36982" fg:w="2532"/><text x="51.8187%" y="158.50">wra..</text></g><g><title>run_module (pynpoint/core/pypeline.py:580) (2,532 samples, 3.53%)</title><rect x="51.5687%" y="164" width="3.5307%" height="15" fill="rgb(239,54,39)" fg:x="36982" fg:w="2532"/><text x="51.8187%" y="174.50">run..</text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:137) (102 samples, 0.14%)</title><rect x="55.4397%" y="260" width="0.1422%" height="15" fill="rgb(230,99,41)" fg:x="39758" fg:w="102"/><text x="55.6897%" y="270.50"></text></g><g><title>guesses (center_guess.py:149) (95 samples, 0.13%)</title><rect x="55.4494%" y="276" width="0.1325%" height="15" fill="rgb(253,106,12)" fg:x="39765" fg:w="95"/><text x="55.6994%" y="286.50"></text></g><g><title>__init__ (scipy/optimize/_differentiable_functions.py:158) (104 samples, 0.15%)</title><rect x="55.4383%" y="212" width="0.1450%" height="15" fill="rgb(213,46,41)" fg:x="39757" fg:w="104"/><text x="55.6883%" y="222.50"></text></g><g><title>_update_fun (scipy/optimize/_differentiable_functions.py:251) (104 samples, 0.15%)</title><rect x="55.4383%" y="228" width="0.1450%" height="15" fill="rgb(215,133,35)" fg:x="39757" fg:w="104"/><text x="55.6883%" y="238.50"></text></g><g><title>update_fun (scipy/optimize/_differentiable_functions.py:155) (104 samples, 0.15%)</title><rect x="55.4383%" y="244" width="0.1450%" height="15" fill="rgb(213,28,5)" fg:x="39757" fg:w="104"/><text x="55.6883%" y="254.50"></text></g><g><title>gaussian_2d (center_guess.py:142) (94 samples, 0.13%)</title><rect x="55.9333%" y="340" width="0.1311%" height="15" fill="rgb(215,77,49)" fg:x="40112" fg:w="94"/><text x="56.1833%" y="350.50"></text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:137) (208 samples, 0.29%)</title><rect x="55.7883%" y="308" width="0.2900%" height="15" fill="rgb(248,100,22)" fg:x="40008" fg:w="208"/><text x="56.0383%" y="318.50"></text></g><g><title>guesses (center_guess.py:149) (197 samples, 0.27%)</title><rect x="55.8036%" y="324" width="0.2747%" height="15" fill="rgb(208,67,9)" fg:x="40019" fg:w="197"/><text x="56.0536%" y="334.50"></text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:576) (229 samples, 0.32%)</title><rect x="55.7660%" y="276" width="0.3193%" height="15" fill="rgb(219,133,21)" fg:x="39992" fg:w="229"/><text x="56.0160%" y="286.50"></text></g><g><title>fun_wrapped (scipy/optimize/_numdiff.py:456) (227 samples, 0.32%)</title><rect x="55.7687%" y="292" width="0.3165%" height="15" fill="rgb(246,46,29)" fg:x="39994" fg:w="227"/><text x="56.0187%" y="302.50"></text></g><g><title>__init__ (scipy/optimize/_differentiable_functions.py:177) (367 samples, 0.51%)</title><rect x="55.5847%" y="212" width="0.5118%" height="15" fill="rgb(246,185,52)" fg:x="39862" fg:w="367"/><text x="55.8347%" y="222.50"></text></g><g><title>_update_grad (scipy/optimize/_differentiable_functions.py:256) (367 samples, 0.51%)</title><rect x="55.5847%" y="228" width="0.5118%" height="15" fill="rgb(252,136,11)" fg:x="39862" fg:w="367"/><text x="55.8347%" y="238.50"></text></g><g><title>update_grad (scipy/optimize/_differentiable_functions.py:173) (364 samples, 0.51%)</title><rect x="55.5889%" y="244" width="0.5076%" height="15" fill="rgb(219,138,53)" fg:x="39865" fg:w="364"/><text x="55.8389%" y="254.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:505) (249 samples, 0.35%)</title><rect x="55.7492%" y="260" width="0.3472%" height="15" fill="rgb(211,51,23)" fg:x="39980" fg:w="249"/><text x="55.9992%" y="270.50"></text></g><g><title>_minimize_lbfgsb (scipy/optimize/_lbfgsb_py.py:305) (502 samples, 0.70%)</title><rect x="55.4201%" y="180" width="0.7000%" height="15" fill="rgb(247,221,28)" fg:x="39744" fg:w="502"/><text x="55.6701%" y="190.50"></text></g><g><title>_prepare_scalar_function (scipy/optimize/_optimize.py:332) (502 samples, 0.70%)</title><rect x="55.4201%" y="196" width="0.7000%" height="15" fill="rgb(251,222,45)" fg:x="39744" fg:w="502"/><text x="55.6701%" y="206.50"></text></g><g><title>_minimize_lbfgsb (scipy/optimize/_lbfgsb_py.py:350) (349 samples, 0.49%)</title><rect x="56.1466%" y="180" width="0.4867%" height="15" fill="rgb(217,162,53)" fg:x="40265" fg:w="349"/><text x="56.3966%" y="190.50"></text></g><g><title>array_equal (&lt;__array_function__ internals&gt;:180) (449 samples, 0.63%)</title><rect x="56.8494%" y="212" width="0.6261%" height="15" fill="rgb(229,93,14)" fg:x="40769" fg:w="449"/><text x="57.0994%" y="222.50"></text></g><g><title>array_equal (numpy/core/numeric.py:2463) (378 samples, 0.53%)</title><rect x="56.9484%" y="228" width="0.5271%" height="15" fill="rgb(209,67,49)" fg:x="40840" fg:w="378"/><text x="57.1984%" y="238.50"></text></g><g><title>_all (numpy/core/_methods.py:63) (217 samples, 0.30%)</title><rect x="57.1729%" y="244" width="0.3026%" height="15" fill="rgb(213,87,29)" fg:x="41001" fg:w="217"/><text x="57.4229%" y="254.50"></text></g><g><title>fun_and_grad (scipy/optimize/_differentiable_functions.py:283) (494 samples, 0.69%)</title><rect x="56.7895%" y="196" width="0.6888%" height="15" fill="rgb(205,151,52)" fg:x="40726" fg:w="494"/><text x="57.0395%" y="206.50"></text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;:180) (90 samples, 0.13%)</title><rect x="57.6735%" y="228" width="0.1255%" height="15" fill="rgb(253,215,39)" fg:x="41360" fg:w="90"/><text x="57.9235%" y="238.50"></text></g><g><title>update_x (scipy/optimize/_differentiable_functions.py:243) (207 samples, 0.29%)</title><rect x="57.5132%" y="212" width="0.2886%" height="15" fill="rgb(221,220,41)" fg:x="41245" fg:w="207"/><text x="57.7632%" y="222.50"></text></g><g><title>fun_and_grad (scipy/optimize/_differentiable_functions.py:284) (244 samples, 0.34%)</title><rect x="57.4783%" y="196" width="0.3402%" height="15" fill="rgb(218,133,21)" fg:x="41220" fg:w="244"/><text x="57.7283%" y="206.50"></text></g><g><title>guesses (center_guess.py:148) (120 samples, 0.17%)</title><rect x="58.1435%" y="260" width="0.1673%" height="15" fill="rgb(221,193,43)" fg:x="41697" fg:w="120"/><text x="58.3935%" y="270.50"></text></g><g><title>_amax (numpy/core/_methods.py:40) (252 samples, 0.35%)</title><rect x="58.9299%" y="276" width="0.3514%" height="15" fill="rgb(240,128,52)" fg:x="42261" fg:w="252"/><text x="59.1799%" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py:48) (280 samples, 0.39%)</title><rect x="59.2813%" y="276" width="0.3904%" height="15" fill="rgb(253,114,12)" fg:x="42513" fg:w="280"/><text x="59.5313%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:129) (207 samples, 0.29%)</title><rect x="59.6787%" y="276" width="0.2886%" height="15" fill="rgb(215,223,47)" fg:x="42798" fg:w="207"/><text x="59.9287%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:130) (111 samples, 0.15%)</title><rect x="59.9674%" y="276" width="0.1548%" height="15" fill="rgb(248,225,23)" fg:x="43005" fg:w="111"/><text x="60.2174%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:132) (78 samples, 0.11%)</title><rect x="60.1222%" y="276" width="0.1088%" height="15" fill="rgb(250,108,0)" fg:x="43116" fg:w="78"/><text x="60.3722%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:135) (201 samples, 0.28%)</title><rect x="60.2504%" y="276" width="0.2803%" height="15" fill="rgb(228,208,7)" fg:x="43208" fg:w="201"/><text x="60.5004%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:136) (118 samples, 0.16%)</title><rect x="60.5307%" y="276" width="0.1645%" height="15" fill="rgb(244,45,10)" fg:x="43409" fg:w="118"/><text x="60.7807%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:137) (99 samples, 0.14%)</title><rect x="60.6953%" y="276" width="0.1380%" height="15" fill="rgb(207,125,25)" fg:x="43527" fg:w="99"/><text x="60.9453%" y="286.50"></text></g><g><title>gaussian_2d (center_guess.py:142) (1,864 samples, 2.60%)</title><rect x="61.0927%" y="276" width="2.5992%" height="15" fill="rgb(210,195,18)" fg:x="43812" fg:w="1864"/><text x="61.3427%" y="286.50">ga..</text></g><g><title>gaussian_2d (center_guess.py:143) (195 samples, 0.27%)</title><rect x="63.6919%" y="276" width="0.2719%" height="15" fill="rgb(249,80,12)" fg:x="45676" fg:w="195"/><text x="63.9419%" y="286.50"></text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:137) (4,338 samples, 6.05%)</title><rect x="57.9162%" y="244" width="6.0490%" height="15" fill="rgb(221,65,9)" fg:x="41534" fg:w="4338"/><text x="58.1662%" y="254.50">fun_wrap..</text></g><g><title>guesses (center_guess.py:149) (4,055 samples, 5.65%)</title><rect x="58.3108%" y="260" width="5.6544%" height="15" fill="rgb(235,49,36)" fg:x="41817" fg:w="4055"/><text x="58.5608%" y="270.50">guesses..</text></g><g><title>_update_fun (scipy/optimize/_differentiable_functions.py:251) (4,480 samples, 6.25%)</title><rect x="57.8395%" y="212" width="6.2470%" height="15" fill="rgb(225,32,20)" fg:x="41479" fg:w="4480"/><text x="58.0895%" y="222.50">_update_..</text></g><g><title>update_fun (scipy/optimize/_differentiable_functions.py:155) (4,464 samples, 6.22%)</title><rect x="57.8618%" y="228" width="6.2247%" height="15" fill="rgb(215,141,46)" fg:x="41495" fg:w="4464"/><text x="58.1118%" y="238.50">update_f..</text></g><g><title>fun_and_grad (scipy/optimize/_differentiable_functions.py:285) (4,503 samples, 6.28%)</title><rect x="57.8186%" y="196" width="6.2791%" height="15" fill="rgb(250,160,47)" fg:x="41464" fg:w="4503"/><text x="58.0686%" y="206.50">fun_and_..</text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;:180) (74 samples, 0.10%)</title><rect x="64.4756%" y="260" width="0.1032%" height="15" fill="rgb(216,222,40)" fg:x="46238" fg:w="74"/><text x="64.7256%" y="270.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:441) (113 samples, 0.16%)</title><rect x="64.4226%" y="244" width="0.1576%" height="15" fill="rgb(234,217,39)" fg:x="46200" fg:w="113"/><text x="64.6726%" y="254.50"></text></g><g><title>_prepare_bounds (scipy/optimize/_numdiff.py:204) (87 samples, 0.12%)</title><rect x="64.6122%" y="260" width="0.1213%" height="15" fill="rgb(207,178,40)" fg:x="46336" fg:w="87"/><text x="64.8622%" y="270.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:445) (112 samples, 0.16%)</title><rect x="64.5899%" y="244" width="0.1562%" height="15" fill="rgb(221,136,13)" fg:x="46320" fg:w="112"/><text x="64.8399%" y="254.50"></text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;:180) (198 samples, 0.28%)</title><rect x="64.8785%" y="260" width="0.2761%" height="15" fill="rgb(249,199,10)" fg:x="46527" fg:w="198"/><text x="65.1285%" y="270.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:465) (234 samples, 0.33%)</title><rect x="64.8311%" y="244" width="0.3263%" height="15" fill="rgb(249,222,13)" fg:x="46493" fg:w="234"/><text x="65.0811%" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:70) (76 samples, 0.11%)</title><rect x="65.6301%" y="292" width="0.1060%" height="15" fill="rgb(244,185,38)" fg:x="47066" fg:w="76"/><text x="65.8801%" y="302.50"></text></g><g><title>any (&lt;__array_function__ internals&gt;:180) (449 samples, 0.63%)</title><rect x="65.4754%" y="260" width="0.6261%" height="15" fill="rgb(236,202,9)" fg:x="46955" fg:w="449"/><text x="65.7254%" y="270.50"></text></g><g><title>any (numpy/core/fromnumeric.py:2397) (375 samples, 0.52%)</title><rect x="65.5785%" y="276" width="0.5229%" height="15" fill="rgb(250,229,37)" fg:x="47029" fg:w="375"/><text x="65.8285%" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (244 samples, 0.34%)</title><rect x="65.7612%" y="292" width="0.3402%" height="15" fill="rgb(206,174,23)" fg:x="47160" fg:w="244"/><text x="66.0112%" y="302.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:469) (673 samples, 0.94%)</title><rect x="65.1644%" y="244" width="0.9384%" height="15" fill="rgb(211,33,43)" fg:x="46732" fg:w="673"/><text x="65.4144%" y="254.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:484) (481 samples, 0.67%)</title><rect x="66.1084%" y="244" width="0.6707%" height="15" fill="rgb(245,58,50)" fg:x="47409" fg:w="481"/><text x="66.3584%" y="254.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:489) (144 samples, 0.20%)</title><rect x="66.7903%" y="244" width="0.2008%" height="15" fill="rgb(244,68,36)" fg:x="47898" fg:w="144"/><text x="67.0403%" y="254.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:490) (390 samples, 0.54%)</title><rect x="66.9911%" y="244" width="0.5438%" height="15" fill="rgb(232,229,15)" fg:x="48042" fg:w="390"/><text x="67.2411%" y="254.50"></text></g><g><title>where (&lt;__array_function__ internals&gt;:180) (212 samples, 0.30%)</title><rect x="67.2393%" y="260" width="0.2956%" height="15" fill="rgb(254,30,23)" fg:x="48220" fg:w="212"/><text x="67.4893%" y="270.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:491) (162 samples, 0.23%)</title><rect x="67.5349%" y="244" width="0.2259%" height="15" fill="rgb(235,160,14)" fg:x="48432" fg:w="162"/><text x="67.7849%" y="254.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:492) (143 samples, 0.20%)</title><rect x="67.7608%" y="244" width="0.1994%" height="15" fill="rgb(212,155,44)" fg:x="48594" fg:w="143"/><text x="68.0108%" y="254.50"></text></g><g><title>ones_like (numpy/core/numeric.py:280) (151 samples, 0.21%)</title><rect x="68.1959%" y="292" width="0.2106%" height="15" fill="rgb(226,2,50)" fg:x="48906" fg:w="151"/><text x="68.4459%" y="302.50"></text></g><g><title>empty_like (&lt;__array_function__ internals&gt;:180) (87 samples, 0.12%)</title><rect x="68.2851%" y="308" width="0.1213%" height="15" fill="rgb(234,177,6)" fg:x="48970" fg:w="87"/><text x="68.5351%" y="318.50"></text></g><g><title>copyto (&lt;__array_function__ internals&gt;:180) (115 samples, 0.16%)</title><rect x="68.4636%" y="308" width="0.1604%" height="15" fill="rgb(217,24,9)" fg:x="49098" fg:w="115"/><text x="68.7136%" y="318.50"></text></g><g><title>ones_like (numpy/core/numeric.py:281) (159 samples, 0.22%)</title><rect x="68.4064%" y="292" width="0.2217%" height="15" fill="rgb(220,13,46)" fg:x="49057" fg:w="159"/><text x="68.6564%" y="302.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:43) (408 samples, 0.57%)</title><rect x="68.0606%" y="260" width="0.5689%" height="15" fill="rgb(239,221,27)" fg:x="48809" fg:w="408"/><text x="68.3106%" y="270.50"></text></g><g><title>ones_like (&lt;__array_function__ internals&gt;:180) (337 samples, 0.47%)</title><rect x="68.1596%" y="276" width="0.4699%" height="15" fill="rgb(222,198,25)" fg:x="48880" fg:w="337"/><text x="68.4096%" y="286.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (334 samples, 0.47%)</title><rect x="69.1218%" y="276" width="0.4657%" height="15" fill="rgb(211,99,13)" fg:x="49570" fg:w="334"/><text x="69.3718%" y="286.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (309 samples, 0.43%)</title><rect x="69.1567%" y="292" width="0.4309%" height="15" fill="rgb(232,111,31)" fg:x="49595" fg:w="309"/><text x="69.4067%" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (200 samples, 0.28%)</title><rect x="69.3086%" y="308" width="0.2789%" height="15" fill="rgb(245,82,37)" fg:x="49704" fg:w="200"/><text x="69.5586%" y="318.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:50) (688 samples, 0.96%)</title><rect x="68.6296%" y="260" width="0.9594%" height="15" fill="rgb(227,149,46)" fg:x="49217" fg:w="688"/><text x="68.8796%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:53) (169 samples, 0.24%)</title><rect x="69.5889%" y="260" width="0.2357%" height="15" fill="rgb(218,36,50)" fg:x="49905" fg:w="169"/><text x="69.8389%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:61) (128 samples, 0.18%)</title><rect x="70.0951%" y="260" width="0.1785%" height="15" fill="rgb(226,80,48)" fg:x="50268" fg:w="128"/><text x="70.3451%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:62) (151 samples, 0.21%)</title><rect x="70.2736%" y="260" width="0.2106%" height="15" fill="rgb(238,224,15)" fg:x="50396" fg:w="151"/><text x="70.5236%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:63) (247 samples, 0.34%)</title><rect x="70.4841%" y="260" width="0.3444%" height="15" fill="rgb(241,136,10)" fg:x="50547" fg:w="247"/><text x="70.7341%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:65) (155 samples, 0.22%)</title><rect x="70.8286%" y="260" width="0.2161%" height="15" fill="rgb(208,32,45)" fg:x="50794" fg:w="155"/><text x="71.0786%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:66) (159 samples, 0.22%)</title><rect x="71.0447%" y="260" width="0.2217%" height="15" fill="rgb(207,135,9)" fg:x="50949" fg:w="159"/><text x="71.2947%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:67) (96 samples, 0.13%)</title><rect x="71.2664%" y="260" width="0.1339%" height="15" fill="rgb(206,86,44)" fg:x="51108" fg:w="96"/><text x="71.5164%" y="270.50"></text></g><g><title>_adjust_scheme_to_bounds (scipy/optimize/_numdiff.py:68) (151 samples, 0.21%)</title><rect x="71.4003%" y="260" width="0.2106%" height="15" fill="rgb(245,177,15)" fg:x="51204" fg:w="151"/><text x="71.6503%" y="270.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:496) (2,610 samples, 3.64%)</title><rect x="67.9825%" y="244" width="3.6395%" height="15" fill="rgb(206,64,50)" fg:x="48753" fg:w="2610"/><text x="68.2325%" y="254.50">appr..</text></g><g><title>diag (numpy/lib/twodim_base.py:304) (168 samples, 0.23%)</title><rect x="71.9595%" y="292" width="0.2343%" height="15" fill="rgb(234,36,40)" fg:x="51605" fg:w="168"/><text x="72.2095%" y="302.50"></text></g><g><title>diag (&lt;__array_function__ internals&gt;:180) (285 samples, 0.40%)</title><rect x="71.7991%" y="276" width="0.3974%" height="15" fill="rgb(213,64,8)" fg:x="51490" fg:w="285"/><text x="72.0491%" y="286.50"></text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:570) (331 samples, 0.46%)</title><rect x="71.7377%" y="260" width="0.4616%" height="15" fill="rgb(210,75,36)" fg:x="51446" fg:w="331"/><text x="71.9877%" y="270.50"></text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:574) (137 samples, 0.19%)</title><rect x="72.3039%" y="260" width="0.1910%" height="15" fill="rgb(229,88,21)" fg:x="51852" fg:w="137"/><text x="72.5539%" y="270.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py:67) (87 samples, 0.12%)</title><rect x="73.5017%" y="308" width="0.1213%" height="15" fill="rgb(252,204,47)" fg:x="52711" fg:w="87"/><text x="73.7517%" y="318.50"></text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;:180) (416 samples, 0.58%)</title><rect x="73.1112%" y="292" width="0.5801%" height="15" fill="rgb(208,77,27)" fg:x="52431" fg:w="416"/><text x="73.3612%" y="302.50"></text></g><g><title>copy (&lt;__array_function__ internals&gt;:180) (173 samples, 0.24%)</title><rect x="73.9116%" y="308" width="0.2412%" height="15" fill="rgb(221,76,26)" fg:x="53005" fg:w="173"/><text x="74.1616%" y="318.50"></text></g><g><title>copy (numpy/lib/function_base.py:959) (136 samples, 0.19%)</title><rect x="73.9632%" y="324" width="0.1896%" height="15" fill="rgb(225,139,18)" fg:x="53042" fg:w="136"/><text x="74.2132%" y="334.50"></text></g><g><title>guesses (center_guess.py:148) (213 samples, 0.30%)</title><rect x="74.1613%" y="308" width="0.2970%" height="15" fill="rgb(230,137,11)" fg:x="53184" fg:w="213"/><text x="74.4113%" y="318.50"></text></g><g><title>_amax (numpy/core/_methods.py:40) (611 samples, 0.85%)</title><rect x="75.7858%" y="324" width="0.8520%" height="15" fill="rgb(212,28,1)" fg:x="54349" fg:w="611"/><text x="76.0358%" y="334.50"></text></g><g><title>_sum (numpy/core/_methods.py:48) (546 samples, 0.76%)</title><rect x="76.6391%" y="324" width="0.7614%" height="15" fill="rgb(248,164,17)" fg:x="54961" fg:w="546"/><text x="76.8891%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:129) (385 samples, 0.54%)</title><rect x="77.4117%" y="324" width="0.5369%" height="15" fill="rgb(222,171,42)" fg:x="55515" fg:w="385"/><text x="77.6617%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:130) (274 samples, 0.38%)</title><rect x="77.9485%" y="324" width="0.3821%" height="15" fill="rgb(243,84,45)" fg:x="55900" fg:w="274"/><text x="78.1985%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:132) (131 samples, 0.18%)</title><rect x="78.3306%" y="324" width="0.1827%" height="15" fill="rgb(252,49,23)" fg:x="56174" fg:w="131"/><text x="78.5806%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:135) (385 samples, 0.54%)</title><rect x="78.5621%" y="324" width="0.5369%" height="15" fill="rgb(215,19,7)" fg:x="56340" fg:w="385"/><text x="78.8121%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:136) (197 samples, 0.27%)</title><rect x="79.0989%" y="324" width="0.2747%" height="15" fill="rgb(238,81,41)" fg:x="56725" fg:w="197"/><text x="79.3489%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:137) (196 samples, 0.27%)</title><rect x="79.3736%" y="324" width="0.2733%" height="15" fill="rgb(210,199,37)" fg:x="56922" fg:w="196"/><text x="79.6236%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:138) (132 samples, 0.18%)</title><rect x="79.6469%" y="324" width="0.1841%" height="15" fill="rgb(244,192,49)" fg:x="57118" fg:w="132"/><text x="79.8969%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:139) (177 samples, 0.25%)</title><rect x="79.8310%" y="324" width="0.2468%" height="15" fill="rgb(226,211,11)" fg:x="57250" fg:w="177"/><text x="80.0810%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:140) (156 samples, 0.22%)</title><rect x="80.0778%" y="324" width="0.2175%" height="15" fill="rgb(236,162,54)" fg:x="57427" fg:w="156"/><text x="80.3278%" y="334.50"></text></g><g><title>gaussian_2d (center_guess.py:142) (3,824 samples, 5.33%)</title><rect x="80.2953%" y="324" width="5.3323%" height="15" fill="rgb(220,229,9)" fg:x="57583" fg:w="3824"/><text x="80.5453%" y="334.50">gaussia..</text></g><g><title>gaussian_2d (center_guess.py:143) (389 samples, 0.54%)</title><rect x="85.6276%" y="324" width="0.5424%" height="15" fill="rgb(250,87,22)" fg:x="61407" fg:w="389"/><text x="85.8776%" y="334.50"></text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:137) (8,914 samples, 12.43%)</title><rect x="73.7471%" y="292" width="12.4299%" height="15" fill="rgb(239,43,17)" fg:x="52887" fg:w="8914"/><text x="73.9971%" y="302.50">fun_wrapped (scipy/..</text></g><g><title>guesses (center_guess.py:149) (8,404 samples, 11.72%)</title><rect x="74.4583%" y="308" width="11.7188%" height="15" fill="rgb(231,177,25)" fg:x="53397" fg:w="8404"/><text x="74.7083%" y="318.50">guesses (center_g..</text></g><g><title>fun_wrapped (scipy/optimize/_numdiff.py:456) (9,662 samples, 13.47%)</title><rect x="72.8686%" y="276" width="13.4730%" height="15" fill="rgb(219,179,1)" fg:x="52257" fg:w="9662"/><text x="73.1186%" y="286.50">fun_wrapped (scipy/o..</text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:576) (9,885 samples, 13.78%)</title><rect x="72.5772%" y="260" width="13.7839%" height="15" fill="rgb(238,219,53)" fg:x="52048" fg:w="9885"/><text x="72.8272%" y="270.50">_dense_difference (sc..</text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:598) (334 samples, 0.47%)</title><rect x="86.3611%" y="260" width="0.4657%" height="15" fill="rgb(232,167,36)" fg:x="61933" fg:w="334"/><text x="86.6111%" y="270.50"></text></g><g><title>ravel (&lt;__array_function__ internals&gt;:180) (100 samples, 0.14%)</title><rect x="86.9147%" y="276" width="0.1394%" height="15" fill="rgb(244,19,51)" fg:x="62330" fg:w="100"/><text x="87.1647%" y="286.50"></text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:601) (158 samples, 0.22%)</title><rect x="86.8366%" y="260" width="0.2203%" height="15" fill="rgb(224,6,22)" fg:x="62274" fg:w="158"/><text x="87.0866%" y="270.50"></text></g><g><title>_update_grad (scipy/optimize/_differentiable_functions.py:256) (16,468 samples, 22.96%)</title><rect x="64.1311%" y="212" width="22.9634%" height="15" fill="rgb(224,145,5)" fg:x="45991" fg:w="16468"/><text x="64.3811%" y="222.50">_update_grad (scipy/optimize/_differ..</text></g><g><title>update_grad (scipy/optimize/_differentiable_functions.py:173) (16,420 samples, 22.90%)</title><rect x="64.1981%" y="228" width="22.8965%" height="15" fill="rgb(234,130,49)" fg:x="46039" fg:w="16420"/><text x="64.4481%" y="238.50">update_grad (scipy/optimize/_differe..</text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:505) (11,090 samples, 15.46%)</title><rect x="71.6304%" y="244" width="15.4642%" height="15" fill="rgb(254,6,2)" fg:x="51369" fg:w="11090"/><text x="71.8804%" y="254.50">approx_derivative (scipy..</text></g><g><title>fun_and_grad (scipy/optimize/_differentiable_functions.py:286) (16,494 samples, 23.00%)</title><rect x="64.0977%" y="196" width="22.9997%" height="15" fill="rgb(208,96,46)" fg:x="45967" fg:w="16494"/><text x="64.3477%" y="206.50">fun_and_grad (scipy/optimize/_differ..</text></g><g><title>_minimize_lbfgsb (scipy/optimize/_lbfgsb_py.py:359) (21,784 samples, 30.38%)</title><rect x="56.7337%" y="180" width="30.3762%" height="15" fill="rgb(239,3,39)" fg:x="40686" fg:w="21784"/><text x="56.9837%" y="190.50">_minimize_lbfgsb (scipy/optimize/_lbfgsb_py.py:35..</text></g><g><title>StarCenterFixedGauss (center_guess.py:150) (23,012 samples, 32.09%)</title><rect x="55.1329%" y="148" width="32.0886%" height="15" fill="rgb(233,210,1)" fg:x="39538" fg:w="23012"/><text x="55.3829%" y="158.50">StarCenterFixedGauss (center_guess.py:150)</text></g><g><title>minimize (scipy/optimize/_minimize.py:696) (22,856 samples, 31.87%)</title><rect x="55.3504%" y="164" width="31.8710%" height="15" fill="rgb(244,137,37)" fg:x="39694" fg:w="22856"/><text x="55.6004%" y="174.50">minimize (scipy/optimize/_minimize.py:696)</text></g><g><title>StarCenterFixedGauss (center_guess.py:152) (75 samples, 0.10%)</title><rect x="87.2284%" y="148" width="0.1046%" height="15" fill="rgb(240,136,2)" fg:x="62555" fg:w="75"/><text x="87.4784%" y="158.50"></text></g><g><title>wrapper (typeguard/__init__.py:1031) (76 samples, 0.11%)</title><rect x="87.3456%" y="164" width="0.1060%" height="15" fill="rgb(239,18,37)" fg:x="62639" fg:w="76"/><text x="87.5956%" y="174.50"></text></g><g><title>progress (pynpoint/util/module.py:88) (79 samples, 0.11%)</title><rect x="87.5171%" y="180" width="0.1102%" height="15" fill="rgb(218,185,22)" fg:x="62762" fg:w="79"/><text x="87.7671%" y="190.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (108 samples, 0.15%)</title><rect x="87.4878%" y="164" width="0.1506%" height="15" fill="rgb(225,218,4)" fg:x="62741" fg:w="108"/><text x="87.7378%" y="174.50"></text></g><g><title>StarCenterFixedGauss (center_guess.py:72) (219 samples, 0.31%)</title><rect x="87.3414%" y="148" width="0.3054%" height="15" fill="rgb(230,182,32)" fg:x="62636" fg:w="219"/><text x="87.5914%" y="158.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (163 samples, 0.23%)</title><rect x="87.7388%" y="164" width="0.2273%" height="15" fill="rgb(242,56,43)" fg:x="62921" fg:w="163"/><text x="87.9888%" y="174.50"></text></g><g><title>StarCenterFixedGauss (center_guess.py:77) (257 samples, 0.36%)</title><rect x="87.6496%" y="148" width="0.3584%" height="15" fill="rgb(233,99,24)" fg:x="62857" fg:w="257"/><text x="87.8996%" y="158.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (150 samples, 0.21%)</title><rect x="88.2324%" y="196" width="0.2092%" height="15" fill="rgb(234,209,42)" fg:x="63275" fg:w="150"/><text x="88.4824%" y="206.50"></text></g><g><title>subpixel_distance (pynpoint/util/image.py:473) (251 samples, 0.35%)</title><rect x="88.1334%" y="180" width="0.3500%" height="15" fill="rgb(227,7,12)" fg:x="63204" fg:w="251"/><text x="88.3834%" y="190.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (279 samples, 0.39%)</title><rect x="88.1320%" y="164" width="0.3890%" height="15" fill="rgb(245,203,43)" fg:x="63203" fg:w="279"/><text x="88.3820%" y="174.50"></text></g><g><title>StarCenterFixedGauss (center_guess.py:79) (373 samples, 0.52%)</title><rect x="88.0079%" y="148" width="0.5201%" height="15" fill="rgb(238,205,33)" fg:x="63114" fg:w="373"/><text x="88.2579%" y="158.50"></text></g><g><title>__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:228) (23,959 samples, 33.41%)</title><rect x="55.1315%" y="132" width="33.4091%" height="15" fill="rgb(231,56,7)" fg:x="39537" fg:w="23959"/><text x="55.3815%" y="142.50">__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:228)</text></g><g><title>wrapper (typeguard/__init__.py:1031) (94 samples, 0.13%)</title><rect x="88.5517%" y="212" width="0.1311%" height="15" fill="rgb(244,186,29)" fg:x="63504" fg:w="94"/><text x="88.8017%" y="222.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (118 samples, 0.16%)</title><rect x="88.8069%" y="244" width="0.1645%" height="15" fill="rgb(234,111,31)" fg:x="63687" fg:w="118"/><text x="89.0569%" y="254.50"></text></g><g><title>_check_error_cases (pynpoint/core/dataio.py:430) (79 samples, 0.11%)</title><rect x="88.8613%" y="260" width="0.1102%" height="15" fill="rgb(241,149,10)" fg:x="63726" fg:w="79"/><text x="89.1113%" y="270.50"></text></g><g><title>__getitem__ (pynpoint/core/dataio.py:458) (155 samples, 0.22%)</title><rect x="88.7623%" y="228" width="0.2161%" height="15" fill="rgb(249,206,44)" fg:x="63655" fg:w="155"/><text x="89.0123%" y="238.50"></text></g><g><title>__getitem__ (h5py/_hl/dataset.py:741) (775 samples, 1.08%)</title><rect x="89.3298%" y="244" width="1.0807%" height="15" fill="rgb(251,153,30)" fg:x="64062" fg:w="775"/><text x="89.5798%" y="254.50"></text></g><g><title>_fast_reader (h5py/_hl/dataset.py:506) (78 samples, 0.11%)</title><rect x="90.3018%" y="260" width="0.1088%" height="15" fill="rgb(239,152,38)" fg:x="64759" fg:w="78"/><text x="90.5518%" y="270.50"></text></g><g><title>__getitem__ (pynpoint/core/dataio.py:462) (1,210 samples, 1.69%)</title><rect x="88.9784%" y="228" width="1.6873%" height="15" fill="rgb(249,139,47)" fg:x="63810" fg:w="1210"/><text x="89.2284%" y="238.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (117 samples, 0.16%)</title><rect x="90.5026%" y="244" width="0.1631%" height="15" fill="rgb(244,64,35)" fg:x="64903" fg:w="117"/><text x="90.7526%" y="254.50"></text></g><g><title>spline_filter (scipy/ndimage/_interpolation.py:191) (104 samples, 0.15%)</title><rect x="90.7006%" y="260" width="0.1450%" height="15" fill="rgb(216,46,15)" fg:x="65045" fg:w="104"/><text x="90.9506%" y="270.50"></text></g><g><title>spline_filter1d (scipy/ndimage/_interpolation.py:132) (97 samples, 0.14%)</title><rect x="90.7103%" y="276" width="0.1353%" height="15" fill="rgb(250,74,19)" fg:x="65052" fg:w="97"/><text x="90.9603%" y="286.50"></text></g><g><title>shift (scipy/ndimage/_interpolation.py:678) (111 samples, 0.15%)</title><rect x="90.6922%" y="244" width="0.1548%" height="15" fill="rgb(249,42,33)" fg:x="65039" fg:w="111"/><text x="90.9422%" y="254.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (2,320 samples, 3.24%)</title><rect x="88.7623%" y="212" width="3.2351%" height="15" fill="rgb(242,149,17)" fg:x="63655" fg:w="2320"/><text x="89.0123%" y="222.50">wra..</text></g><g><title>shift_image (pynpoint/util/image.py:285) (953 samples, 1.33%)</title><rect x="90.6685%" y="228" width="1.3289%" height="15" fill="rgb(244,29,21)" fg:x="65022" fg:w="953"/><text x="90.9185%" y="238.50"></text></g><g><title>shift (scipy/ndimage/_interpolation.py:689) (818 samples, 1.14%)</title><rect x="90.8567%" y="244" width="1.1406%" height="15" fill="rgb(220,130,37)" fg:x="65157" fg:w="818"/><text x="91.1067%" y="254.50"></text></g><g><title>wrapper (typeguard/__init__.py:1035) (76 samples, 0.11%)</title><rect x="91.9974%" y="212" width="0.1060%" height="15" fill="rgb(211,67,2)" fg:x="65975" fg:w="76"/><text x="92.2474%" y="222.50"></text></g><g><title>run (pynpoint/processing/centering.py:472) (2,555 samples, 3.56%)</title><rect x="88.5490%" y="196" width="3.5628%" height="15" fill="rgb(235,68,52)" fg:x="63502" fg:w="2555"/><text x="88.7990%" y="206.50">run ..</text></g><g><title>_append_key (pynpoint/core/dataio.py:1007) (79 samples, 0.11%)</title><rect x="92.4073%" y="260" width="0.1102%" height="15" fill="rgb(246,142,3)" fg:x="66269" fg:w="79"/><text x="92.6573%" y="270.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (127 samples, 0.18%)</title><rect x="92.6820%" y="276" width="0.1771%" height="15" fill="rgb(241,25,7)" fg:x="66466" fg:w="127"/><text x="92.9320%" y="286.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1027) (327 samples, 0.46%)</title><rect x="92.5217%" y="260" width="0.4560%" height="15" fill="rgb(242,119,39)" fg:x="66351" fg:w="327"/><text x="92.7717%" y="270.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (148 samples, 0.21%)</title><rect x="93.2231%" y="276" width="0.2064%" height="15" fill="rgb(241,98,45)" fg:x="66854" fg:w="148"/><text x="93.4731%" y="286.50"></text></g><g><title>__setitem__ (h5py/_hl/dataset.py:947) (118 samples, 0.16%)</title><rect x="93.5326%" y="276" width="0.1645%" height="15" fill="rgb(254,28,30)" fg:x="67076" fg:w="118"/><text x="93.7826%" y="286.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1028) (627 samples, 0.87%)</title><rect x="92.9777%" y="260" width="0.8743%" height="15" fill="rgb(241,142,54)" fg:x="66678" fg:w="627"/><text x="93.2277%" y="270.50"></text></g><g><title>__setitem__ (h5py/_hl/dataset.py:982) (84 samples, 0.12%)</title><rect x="93.7348%" y="276" width="0.1171%" height="15" fill="rgb(222,85,15)" fg:x="67221" fg:w="84"/><text x="93.9848%" y="286.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (152 samples, 0.21%)</title><rect x="94.0793%" y="276" width="0.2120%" height="15" fill="rgb(210,85,47)" fg:x="67468" fg:w="152"/><text x="94.3293%" y="286.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:961) (311 samples, 0.43%)</title><rect x="93.8938%" y="260" width="0.4337%" height="15" fill="rgb(224,206,25)" fg:x="67335" fg:w="311"/><text x="94.1438%" y="270.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,411 samples, 1.97%)</title><rect x="92.3990%" y="244" width="1.9675%" height="15" fill="rgb(243,201,19)" fg:x="66263" fg:w="1411"/><text x="92.6490%" y="254.50">w..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,549 samples, 2.16%)</title><rect x="92.2261%" y="212" width="2.1600%" height="15" fill="rgb(236,59,4)" fg:x="66139" fg:w="1549"/><text x="92.4761%" y="222.50">w..</text></g><g><title>append (pynpoint/core/dataio.py:1179) (1,503 samples, 2.10%)</title><rect x="92.2902%" y="228" width="2.0958%" height="15" fill="rgb(254,179,45)" fg:x="66185" fg:w="1503"/><text x="92.5402%" y="238.50">a..</text></g><g><title>run (pynpoint/processing/centering.py:477) (1,635 samples, 2.28%)</title><rect x="92.1117%" y="196" width="2.2799%" height="15" fill="rgb(226,14,10)" fg:x="66057" fg:w="1635"/><text x="92.3617%" y="206.50">r..</text></g><g><title>__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:235) (4,208 samples, 5.87%)</title><rect x="88.5448%" y="132" width="5.8678%" height="15" fill="rgb(244,27,41)" fg:x="63499" fg:w="4208"/><text x="88.7948%" y="142.50">__call_..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (4,208 samples, 5.87%)</title><rect x="88.5448%" y="148" width="5.8678%" height="15" fill="rgb(235,35,32)" fg:x="63499" fg:w="4208"/><text x="88.7948%" y="158.50">wrapper..</text></g><g><title>run_module (pynpoint/core/pypeline.py:580) (4,205 samples, 5.86%)</title><rect x="88.5490%" y="164" width="5.8636%" height="15" fill="rgb(218,68,31)" fg:x="63502" fg:w="4205"/><text x="88.7990%" y="174.50">run_mod..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (4,205 samples, 5.86%)</title><rect x="88.5490%" y="180" width="5.8636%" height="15" fill="rgb(207,120,37)" fg:x="63502" fg:w="4205"/><text x="88.7990%" y="190.50">wrapper..</text></g><g><title>aperture_photometry (photutils/aperture/photometry.py:217) (115 samples, 0.16%)</title><rect x="94.8560%" y="196" width="0.1604%" height="15" fill="rgb(227,98,0)" fg:x="68025" fg:w="115"/><text x="95.1060%" y="206.50"></text></g><g><title>__setitem__ (astropy/table/table.py:1904) (109 samples, 0.15%)</title><rect x="94.8643%" y="212" width="0.1520%" height="15" fill="rgb(207,7,3)" fg:x="68031" fg:w="109"/><text x="95.1143%" y="222.50"></text></g><g><title>aperture_photometry (photutils/aperture/photometry.py:218) (78 samples, 0.11%)</title><rect x="95.0163%" y="196" width="0.1088%" height="15" fill="rgb(206,98,19)" fg:x="68140" fg:w="78"/><text x="95.2663%" y="206.50"></text></g><g><title>__setitem__ (astropy/table/table.py:1904) (75 samples, 0.10%)</title><rect x="95.0205%" y="212" width="0.1046%" height="15" fill="rgb(217,5,26)" fg:x="68143" fg:w="75"/><text x="95.2705%" y="222.50"></text></g><g><title>_do_photometry (photutils/aperture/core.py:390) (117 samples, 0.16%)</title><rect x="95.1293%" y="212" width="0.1631%" height="15" fill="rgb(235,190,38)" fg:x="68221" fg:w="117"/><text x="95.3793%" y="222.50"></text></g><g><title>to_mask (photutils/aperture/circle.py:197) (117 samples, 0.16%)</title><rect x="95.1293%" y="228" width="0.1631%" height="15" fill="rgb(247,86,24)" fg:x="68221" fg:w="117"/><text x="95.3793%" y="238.50"></text></g><g><title>aperture_photometry (photutils/aperture/photometry.py:230) (168 samples, 0.23%)</title><rect x="95.1279%" y="196" width="0.2343%" height="15" fill="rgb(205,101,16)" fg:x="68220" fg:w="168"/><text x="95.3779%" y="206.50"></text></g><g><title>run (IFS_SimpleSubtraction.py:127) (699 samples, 0.97%)</title><rect x="94.6022%" y="180" width="0.9747%" height="15" fill="rgb(246,168,33)" fg:x="67843" fg:w="699"/><text x="94.8522%" y="190.50"></text></g><g><title>aperture_photometry (photutils/aperture/photometry.py:241) (154 samples, 0.21%)</title><rect x="95.3621%" y="196" width="0.2147%" height="15" fill="rgb(231,114,1)" fg:x="68388" fg:w="154"/><text x="95.6121%" y="206.50"></text></g><g><title>__setitem__ (astropy/table/table.py:1904) (152 samples, 0.21%)</title><rect x="95.3649%" y="212" width="0.2120%" height="15" fill="rgb(207,184,53)" fg:x="68390" fg:w="152"/><text x="95.6149%" y="222.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (104 samples, 0.15%)</title><rect x="96.1291%" y="260" width="0.1450%" height="15" fill="rgb(224,95,51)" fg:x="68938" fg:w="104"/><text x="96.3791%" y="270.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1027) (293 samples, 0.41%)</title><rect x="95.9715%" y="244" width="0.4086%" height="15" fill="rgb(212,188,45)" fg:x="68825" fg:w="293"/><text x="96.2215%" y="254.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (145 samples, 0.20%)</title><rect x="96.6311%" y="260" width="0.2022%" height="15" fill="rgb(223,154,38)" fg:x="69298" fg:w="145"/><text x="96.8811%" y="270.50"></text></g><g><title>__setitem__ (h5py/_hl/dataset.py:947) (105 samples, 0.15%)</title><rect x="96.9183%" y="260" width="0.1464%" height="15" fill="rgb(251,22,52)" fg:x="69504" fg:w="105"/><text x="97.1683%" y="270.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:1028) (611 samples, 0.85%)</title><rect x="96.3801%" y="244" width="0.8520%" height="15" fill="rgb(229,209,22)" fg:x="69118" fg:w="611"/><text x="96.6301%" y="254.50"></text></g><g><title>__setitem__ (h5py/_hl/dataset.py:982) (90 samples, 0.13%)</title><rect x="97.1066%" y="260" width="0.1255%" height="15" fill="rgb(234,138,34)" fg:x="69639" fg:w="90"/><text x="97.3566%" y="270.50"></text></g><g><title>__getitem__ (h5py/_hl/group.py:337) (149 samples, 0.21%)</title><rect x="97.4412%" y="260" width="0.2078%" height="15" fill="rgb(212,95,11)" fg:x="69879" fg:w="149"/><text x="97.6912%" y="270.50"></text></g><g><title>_append_key (pynpoint/core/dataio.py:961) (295 samples, 0.41%)</title><rect x="97.2823%" y="244" width="0.4114%" height="15" fill="rgb(240,179,47)" fg:x="69765" fg:w="295"/><text x="97.5323%" y="254.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,324 samples, 1.85%)</title><rect x="95.8920%" y="228" width="1.8462%" height="15" fill="rgb(240,163,11)" fg:x="68768" fg:w="1324"/><text x="96.1420%" y="238.50">w..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,455 samples, 2.03%)</title><rect x="95.7275%" y="196" width="2.0289%" height="15" fill="rgb(236,37,12)" fg:x="68650" fg:w="1455"/><text x="95.9775%" y="206.50">w..</text></g><g><title>append (pynpoint/core/dataio.py:1179) (1,406 samples, 1.96%)</title><rect x="95.7958%" y="212" width="1.9606%" height="15" fill="rgb(232,164,16)" fg:x="68699" fg:w="1406"/><text x="96.0458%" y="222.50">a..</text></g><g><title>run (IFS_SimpleSubtraction.py:136) (1,572 samples, 2.19%)</title><rect x="95.5769%" y="180" width="2.1920%" height="15" fill="rgb(244,205,15)" fg:x="68542" fg:w="1572"/><text x="95.8269%" y="190.50">r..</text></g><g><title>run_module (pynpoint/core/pypeline.py:580) (2,418 samples, 3.37%)</title><rect x="94.4125%" y="164" width="3.3717%" height="15" fill="rgb(223,117,47)" fg:x="67707" fg:w="2418"/><text x="94.6625%" y="174.50">run..</text></g><g><title>__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:241) (2,419 samples, 3.37%)</title><rect x="94.4125%" y="132" width="3.3731%" height="15" fill="rgb(244,107,35)" fg:x="67707" fg:w="2419"/><text x="94.6625%" y="142.50">__c..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (2,419 samples, 3.37%)</title><rect x="94.4125%" y="148" width="3.3731%" height="15" fill="rgb(205,140,8)" fg:x="67707" fg:w="2419"/><text x="94.6625%" y="158.50">wra..</text></g><g><title>__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:250) (91 samples, 0.13%)</title><rect x="97.7856%" y="132" width="0.1269%" height="15" fill="rgb(228,84,46)" fg:x="70126" fg:w="91"/><text x="98.0356%" y="142.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (91 samples, 0.13%)</title><rect x="97.7856%" y="148" width="0.1269%" height="15" fill="rgb(254,188,9)" fg:x="70126" fg:w="91"/><text x="98.0356%" y="158.50"></text></g><g><title>run_module (pynpoint/core/pypeline.py:580) (90 samples, 0.13%)</title><rect x="97.7870%" y="164" width="0.1255%" height="15" fill="rgb(206,112,54)" fg:x="70127" fg:w="90"/><text x="98.0370%" y="174.50"></text></g><g><title>run_module (pynpoint/core/pypeline.py:580) (109 samples, 0.15%)</title><rect x="97.9125%" y="164" width="0.1520%" height="15" fill="rgb(216,84,49)" fg:x="70217" fg:w="109"/><text x="98.1625%" y="174.50"></text></g><g><title>__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:254) (112 samples, 0.16%)</title><rect x="97.9125%" y="132" width="0.1562%" height="15" fill="rgb(214,194,35)" fg:x="70217" fg:w="112"/><text x="98.1625%" y="142.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (112 samples, 0.16%)</title><rect x="97.9125%" y="148" width="0.1562%" height="15" fill="rgb(249,28,3)" fg:x="70217" fg:w="112"/><text x="98.1625%" y="158.50"></text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:576) (103 samples, 0.14%)</title><rect x="98.1817%" y="372" width="0.1436%" height="15" fill="rgb(222,56,52)" fg:x="70410" fg:w="103"/><text x="98.4317%" y="382.50"></text></g><g><title>fun_wrapped (scipy/optimize/_numdiff.py:456) (103 samples, 0.14%)</title><rect x="98.1817%" y="388" width="0.1436%" height="15" fill="rgb(245,217,50)" fg:x="70410" fg:w="103"/><text x="98.4317%" y="398.50"></text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:137) (103 samples, 0.14%)</title><rect x="98.1817%" y="404" width="0.1436%" height="15" fill="rgb(213,201,24)" fg:x="70410" fg:w="103"/><text x="98.4317%" y="414.50"></text></g><g><title>_minimize_bfgs (scipy/optimize/_optimize.py:1362) (169 samples, 0.24%)</title><rect x="98.0952%" y="276" width="0.2357%" height="15" fill="rgb(248,116,28)" fg:x="70348" fg:w="169"/><text x="98.3452%" y="286.50"></text></g><g><title>_prepare_scalar_function (scipy/optimize/_optimize.py:332) (169 samples, 0.24%)</title><rect x="98.0952%" y="292" width="0.2357%" height="15" fill="rgb(219,72,43)" fg:x="70348" fg:w="169"/><text x="98.3452%" y="302.50"></text></g><g><title>__init__ (scipy/optimize/_differentiable_functions.py:177) (114 samples, 0.16%)</title><rect x="98.1719%" y="308" width="0.1590%" height="15" fill="rgb(209,138,14)" fg:x="70403" fg:w="114"/><text x="98.4219%" y="318.50"></text></g><g><title>_update_grad (scipy/optimize/_differentiable_functions.py:256) (114 samples, 0.16%)</title><rect x="98.1719%" y="324" width="0.1590%" height="15" fill="rgb(222,18,33)" fg:x="70403" fg:w="114"/><text x="98.4219%" y="334.50"></text></g><g><title>update_grad (scipy/optimize/_differentiable_functions.py:173) (113 samples, 0.16%)</title><rect x="98.1733%" y="340" width="0.1576%" height="15" fill="rgb(213,199,7)" fg:x="70404" fg:w="113"/><text x="98.4233%" y="350.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:505) (109 samples, 0.15%)</title><rect x="98.1789%" y="356" width="0.1520%" height="15" fill="rgb(250,110,10)" fg:x="70408" fg:w="109"/><text x="98.4289%" y="366.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (166 samples, 0.23%)</title><rect x="98.3825%" y="436" width="0.2315%" height="15" fill="rgb(248,123,6)" fg:x="70554" fg:w="166"/><text x="98.6325%" y="446.50"></text></g><g><title>shift_image (pynpoint/util/image.py:285) (166 samples, 0.23%)</title><rect x="98.3825%" y="452" width="0.2315%" height="15" fill="rgb(206,91,31)" fg:x="70554" fg:w="166"/><text x="98.6325%" y="462.50"></text></g><g><title>shift (scipy/ndimage/_interpolation.py:689) (142 samples, 0.20%)</title><rect x="98.4159%" y="468" width="0.1980%" height="15" fill="rgb(211,154,13)" fg:x="70578" fg:w="142"/><text x="98.6659%" y="478.50"></text></g><g><title>optim (center_guess.py:313) (189 samples, 0.26%)</title><rect x="98.3546%" y="420" width="0.2635%" height="15" fill="rgb(225,148,7)" fg:x="70534" fg:w="189"/><text x="98.6046%" y="430.50"></text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:137) (310 samples, 0.43%)</title><rect x="98.3518%" y="404" width="0.4323%" height="15" fill="rgb(220,160,43)" fg:x="70532" fg:w="310"/><text x="98.6018%" y="414.50"></text></g><g><title>optim (center_guess.py:324) (115 samples, 0.16%)</title><rect x="98.6237%" y="420" width="0.1604%" height="15" fill="rgb(213,52,39)" fg:x="70727" fg:w="115"/><text x="98.8737%" y="430.50"></text></g><g><title>scalar_search_wolfe1 (scipy/optimize/_linesearch.py:160) (316 samples, 0.44%)</title><rect x="98.3448%" y="324" width="0.4406%" height="15" fill="rgb(243,137,7)" fg:x="70527" fg:w="316"/><text x="98.5948%" y="334.50"></text></g><g><title>phi (scipy/optimize/_linesearch.py:75) (316 samples, 0.44%)</title><rect x="98.3448%" y="340" width="0.4406%" height="15" fill="rgb(230,79,13)" fg:x="70527" fg:w="316"/><text x="98.5948%" y="350.50"></text></g><g><title>fun (scipy/optimize/_differentiable_functions.py:267) (311 samples, 0.43%)</title><rect x="98.3518%" y="356" width="0.4337%" height="15" fill="rgb(247,105,23)" fg:x="70532" fg:w="311"/><text x="98.6018%" y="366.50"></text></g><g><title>_update_fun (scipy/optimize/_differentiable_functions.py:251) (311 samples, 0.43%)</title><rect x="98.3518%" y="372" width="0.4337%" height="15" fill="rgb(223,179,41)" fg:x="70532" fg:w="311"/><text x="98.6018%" y="382.50"></text></g><g><title>update_fun (scipy/optimize/_differentiable_functions.py:155) (311 samples, 0.43%)</title><rect x="98.3518%" y="388" width="0.4337%" height="15" fill="rgb(218,9,34)" fg:x="70532" fg:w="311"/><text x="98.6018%" y="398.50"></text></g><g><title>wrapper (typeguard/__init__.py:1033) (353 samples, 0.49%)</title><rect x="98.8984%" y="484" width="0.4922%" height="15" fill="rgb(222,106,8)" fg:x="70924" fg:w="353"/><text x="99.1484%" y="494.50"></text></g><g><title>shift_image (pynpoint/util/image.py:285) (353 samples, 0.49%)</title><rect x="98.8984%" y="500" width="0.4922%" height="15" fill="rgb(211,220,0)" fg:x="70924" fg:w="353"/><text x="99.1484%" y="510.50"></text></g><g><title>shift (scipy/ndimage/_interpolation.py:689) (288 samples, 0.40%)</title><rect x="98.9890%" y="516" width="0.4016%" height="15" fill="rgb(229,52,16)" fg:x="70989" fg:w="288"/><text x="99.2390%" y="526.50"></text></g><g><title>optim (center_guess.py:313) (400 samples, 0.56%)</title><rect x="98.8384%" y="468" width="0.5578%" height="15" fill="rgb(212,155,18)" fg:x="70881" fg:w="400"/><text x="99.0884%" y="478.50"></text></g><g><title>aperture_photometry (photutils/aperture/photometry.py:230) (92 samples, 0.13%)</title><rect x="99.5970%" y="484" width="0.1283%" height="15" fill="rgb(242,21,14)" fg:x="71425" fg:w="92"/><text x="99.8470%" y="494.50"></text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:137) (704 samples, 0.98%)</title><rect x="98.8357%" y="452" width="0.9817%" height="15" fill="rgb(222,19,48)" fg:x="70879" fg:w="704"/><text x="99.0857%" y="462.50"></text></g><g><title>optim (center_guess.py:324) (296 samples, 0.41%)</title><rect x="99.4046%" y="468" width="0.4128%" height="15" fill="rgb(232,45,27)" fg:x="71287" fg:w="296"/><text x="99.6546%" y="478.50"></text></g><g><title>_dense_difference (scipy/optimize/_numdiff.py:576) (715 samples, 1.00%)</title><rect x="98.8273%" y="420" width="0.9970%" height="15" fill="rgb(249,103,42)" fg:x="70873" fg:w="715"/><text x="99.0773%" y="430.50"></text></g><g><title>fun_wrapped (scipy/optimize/_numdiff.py:456) (712 samples, 0.99%)</title><rect x="98.8315%" y="436" width="0.9928%" height="15" fill="rgb(246,81,33)" fg:x="70876" fg:w="712"/><text x="99.0815%" y="446.50"></text></g><g><title>derphi (scipy/optimize/_linesearch.py:78) (747 samples, 1.04%)</title><rect x="98.7855%" y="340" width="1.0416%" height="15" fill="rgb(252,33,42)" fg:x="70843" fg:w="747"/><text x="99.0355%" y="350.50"></text></g><g><title>grad (scipy/optimize/_differentiable_functions.py:273) (741 samples, 1.03%)</title><rect x="98.7938%" y="356" width="1.0333%" height="15" fill="rgb(209,212,41)" fg:x="70849" fg:w="741"/><text x="99.0438%" y="366.50"></text></g><g><title>_update_grad (scipy/optimize/_differentiable_functions.py:256) (741 samples, 1.03%)</title><rect x="98.7938%" y="372" width="1.0333%" height="15" fill="rgb(207,154,6)" fg:x="70849" fg:w="741"/><text x="99.0438%" y="382.50"></text></g><g><title>update_grad (scipy/optimize/_differentiable_functions.py:173) (741 samples, 1.03%)</title><rect x="98.7938%" y="388" width="1.0333%" height="15" fill="rgb(223,64,47)" fg:x="70849" fg:w="741"/><text x="99.0438%" y="398.50"></text></g><g><title>approx_derivative (scipy/optimize/_numdiff.py:505) (720 samples, 1.00%)</title><rect x="98.8231%" y="404" width="1.0040%" height="15" fill="rgb(211,161,38)" fg:x="70870" fg:w="720"/><text x="99.0731%" y="414.50"></text></g><g><title>_minimize_bfgs (scipy/optimize/_optimize.py:1388) (1,065 samples, 1.49%)</title><rect x="98.3434%" y="276" width="1.4851%" height="15" fill="rgb(219,138,40)" fg:x="70526" fg:w="1065"/><text x="98.5934%" y="286.50"></text></g><g><title>_line_search_wolfe12 (scipy/optimize/_optimize.py:1160) (1,065 samples, 1.49%)</title><rect x="98.3434%" y="292" width="1.4851%" height="15" fill="rgb(241,228,46)" fg:x="70526" fg:w="1065"/><text x="98.5934%" y="302.50"></text></g><g><title>line_search_wolfe1 (scipy/optimize/_linesearch.py:84) (1,065 samples, 1.49%)</title><rect x="98.3434%" y="308" width="1.4851%" height="15" fill="rgb(223,209,38)" fg:x="70526" fg:w="1065"/><text x="98.5934%" y="318.50"></text></g><g><title>scalar_search_wolfe1 (scipy/optimize/_linesearch.py:161) (748 samples, 1.04%)</title><rect x="98.7855%" y="324" width="1.0430%" height="15" fill="rgb(236,164,45)" fg:x="70843" fg:w="748"/><text x="99.0355%" y="334.50"></text></g><g><title>find_best_shift (center_guess.py:334) (1,254 samples, 1.75%)</title><rect x="98.0910%" y="244" width="1.7486%" height="15" fill="rgb(231,15,5)" fg:x="70345" fg:w="1254"/><text x="98.3410%" y="254.50"></text></g><g><title>minimize (scipy/optimize/_minimize.py:691) (1,251 samples, 1.74%)</title><rect x="98.0952%" y="260" width="1.7444%" height="15" fill="rgb(252,35,15)" fg:x="70348" fg:w="1251"/><text x="98.3452%" y="270.50"></text></g><g><title>find_best_adj_wrap (center_guess.py:392) (1,285 samples, 1.79%)</title><rect x="98.0910%" y="228" width="1.7918%" height="15" fill="rgb(248,181,18)" fg:x="70345" fg:w="1285"/><text x="98.3410%" y="238.50">f..</text></g><g><title>run (center_guess.py:425) (1,323 samples, 1.84%)</title><rect x="98.0785%" y="196" width="1.8448%" height="15" fill="rgb(233,39,42)" fg:x="70336" fg:w="1323"/><text x="98.3285%" y="206.50">r..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,323 samples, 1.84%)</title><rect x="98.0785%" y="212" width="1.8448%" height="15" fill="rgb(238,110,33)" fg:x="70336" fg:w="1323"/><text x="98.3285%" y="222.50">w..</text></g><g><title>run_module (pynpoint/core/pypeline.py:580) (1,336 samples, 1.86%)</title><rect x="98.0771%" y="164" width="1.8630%" height="15" fill="rgb(233,195,10)" fg:x="70335" fg:w="1336"/><text x="98.3271%" y="174.50">r..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,336 samples, 1.86%)</title><rect x="98.0771%" y="180" width="1.8630%" height="15" fill="rgb(254,105,3)" fg:x="70335" fg:w="1336"/><text x="98.3271%" y="190.50">w..</text></g><g><title>__call__ (applefy/wrappers/JWSTpynpoint_wrap.py:269) (1,340 samples, 1.87%)</title><rect x="98.0729%" y="132" width="1.8685%" height="15" fill="rgb(221,225,9)" fg:x="70332" fg:w="1340"/><text x="98.3229%" y="142.50">_..</text></g><g><title>wrapper (typeguard/__init__.py:1033) (1,340 samples, 1.87%)</title><rect x="98.0729%" y="148" width="1.8685%" height="15" fill="rgb(224,227,45)" fg:x="70332" fg:w="1340"/><text x="98.3229%" y="158.50">w..</text></g><g><title>&lt;module&gt; (Contrast_curve_plotter.py:194) (71,703 samples, 99.98%)</title><rect x="0.0000%" y="68" width="99.9847%" height="15" fill="rgb(229,198,43)" fg:x="0" fg:w="71703"/><text x="0.2500%" y="78.50">&lt;module&gt; (Contrast_curve_plotter.py:194)</text></g><g><title>run_fake_planet_experiments (applefy/detections/contrast_JWST.py:436) (71,703 samples, 99.98%)</title><rect x="0.0000%" y="84" width="99.9847%" height="15" fill="rgb(206,209,35)" fg:x="0" fg:w="71703"/><text x="0.2500%" y="94.50">run_fake_planet_experiments (applefy/detections/contrast_JWST.py:436)</text></g><g><title>&lt;genexpr&gt; (applefy/detections/contrast_JWST.py:436) (71,703 samples, 99.98%)</title><rect x="0.0000%" y="100" width="99.9847%" height="15" fill="rgb(245,195,53)" fg:x="0" fg:w="71703"/><text x="0.2500%" y="110.50">&lt;genexpr&gt; (applefy/detections/contrast_JWST.py:436)</text></g><g><title>_run_fake_planet_experiment (applefy/detections/contrast_JWST.py:390) (70,710 samples, 98.60%)</title><rect x="1.3847%" y="116" width="98.6000%" height="15" fill="rgb(240,92,26)" fg:x="993" fg:w="70710"/><text x="1.6347%" y="126.50">_run_fake_planet_experiment (applefy/detections/contrast_JWST.py:390)</text></g><g><title>all (71,714 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(207,40,23)" fg:x="0" fg:w="71714"/><text x="0.2500%" y="62.50"></text></g></svg></svg>